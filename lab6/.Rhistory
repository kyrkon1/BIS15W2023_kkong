marriage.test = chisq.test(
marriage.table, p=c(1/5,1/5,1/5,1/5,1/5),correct= FALSE)
chisq.test(marriage.table, p=c(1/5,1/5,1/5,1/5,1/5), correct= FALSE)
marriage.test = chisq.test(
marriage.table, p=c(1/5,1/5,1/5,1/5,1/5),correct= FALSE)
chisq.test(
marriage.table, p=c(1/5,1/5,1/5,1/5,1/5),correct= FALSE)
marriage.test$residuals^2
table(patients$obese)
table(patients$marriage)
dept.table= table(patients$obese, patients$marriage)
dept.table= table(patients$obese, patients$marriage)
my.test = chisq.test(dept.table, correct= FALSE)
my.test = chisq.test(dept.table, correct= FALSE)
my.test$statistic
my.test$p.value
my.test$expected
my.test$observed
my.test$observed - my.test$expected
my.test$residuals^2
my.test = chisq.test(dept.table, correct= FALSE)
chisq.test(dept.table, correct =FALSE)
my.test$statistic
my.test$p.value
my.test$expected
my.test$observed
my.test$expected
my.test$observed - my.test$expected
my.test$residuals^2
library("MASS")
head*cats()
head(cats)
plot(cats)
plot(cats, main="Cat graphs")
plot(cats$Bwt,cats$Hwt, xlab='Body Weight',ylab="Heart Weight",
main='Heart vs Body Weight of Cats Scatter Plot')
?cats
plot(cats$Bwt,cats$Hwt, xlab='Body Weight',ylab="Heart Weight",
main='Heart vs Body Weight of Cats Scatter Plot')
Q1.Y = quantile(cats$Hwt,0.25)
Q3.Y = quantile(cats$Hwt,0.75)
lower.Y = Q1.Y - 1.5*(Q3.Y-Q1.Y)
upper.Y = Q3.Y + 1.5*(Q3.Y-Q1.Y)
outliers.Y = which(cats$Hwt > upper.Y | cats$Hwt < lower.Y)
outliers.Y = which(cats$Hwt > upper.Y | cats$Hwt < lower.Y)
Q3.X = quantile(cats$Bwt,0.75)
Q1.X = quantile(cats$Bwt,0.25)
Q3.X = quantile(cats$Bwt,0.75)
lower.X = Q1.X - 1.5*(Q3.X-Q1.X)
upper.X = Q3.X + 1.5*(Q3.X-Q1.X)
outliers.X = which(cats$Bwt > upper.X | cats$Bwt < lower.X)
# Create a new dataset without the outliers:
no.outliers.cats = cats[-c(outliers.X,outliers.Y),]
# Plot new dataset without outliers:
plot(no.outliers.cats$Bwt,no.outliers.cats$Hwt,
xlab='Body Weight',ylab="Heart Weight",
main='Heart vs Body Weight of Cats Scatter Plot Without Outliers')
#(d) Use the function lm (linear model) to find:
# i) The estimated regression line
lin.model = lm(Hwt ~ Bwt, data = no.outliers.cats)
# ii) The standard deviation of the error.
s.e = summary(lin.model)$sigma
# iii) The coefficient variation
r.2 = summary(lin.model)$r.squared
# iii) The coefficient variation
r.2 = summary(lin.model)$r.squared
# You may also display estimates for B_0 and B_1 by:
the.betas = lin.model$coefficients
#(e) Plot the regression line on your plot.
#     Use the plot function followed by abline(the.betas)
plot(no.outliers.cats$Bwt,no.outliers.cats$Hwt,
xlab='Body Weight',ylab="Heart Weight",
main='Heart vs Body Weight of Cats Scatter Plot Without Outliers')
abline(the.betas)
#(f) Construct a 95% C.I. for the slope.
#    Note: the command below gives the C.I.
#    for the slope and intercept.
confint(lin.model,level = 0.95)
ei = lin.model$residuals
plot(y.hat,ei)
#(g) Check the assumption that the errors have constant variance
#    Describe the plot.
y.hat = lin.model$fitted.values
ei = lin.model$residuals
plot(y.hat,ei)
abline(h = 0, col = "purple")
#(h) Check the assumption that the errors are normally distributed
#    Explain what you see.
qqnorm(ei);qqline(ei)
plot(cats$Bwt,cats$Hwt, xlab='Body Weight',ylab="Heart Weight",
main='Heart vs Body Weight of Cats Scatter Plot')
# Plot new dataset without outliers:
plot(no.outliers.cats$Bwt,no.outliers.cats$Hwt,
xlab='Body Weight',ylab="Heart Weight",
main='Heart vs Body Weight of Cats Scatter Plot Without Outliers')
abline(the.betas)
plot(y.hat,ei)
abline(h = 0, col = "purple")
#(h) Check the assumption that the errors are normally distributed
#    Explain what you see.
qqnorm(ei);qqline(ei)
#(g) Check the assumption that the errors have constant variance
#    Describe the plot.
y.hat = lin.model$fitted.values
ei = lin.model$residuals
+ 5 - 3 * 2
+ 8 / 2 ** 2
(5-3)*2
(8/2)*2
((8/2)*2)*2
pi <- 3.14159265359
pi(2)
2(pi)
2*pi
?mean
x <- c(2, 8, 6, 6, 7, 4, 9, 9, 9, 10)
mean(x)
median(x)
sleeptime_dataframe <-filter(sleep,sleep_total <=19.90)
library(tidyverse)
msleep
sleep <- data.frame(msleep)
dim(sleep)
glimpse(sleep)
summary(sleep)
names(sleep)
table(sleep$vore)
small_bodywt <-filter(sleep,bodywt <= 1)
small_bodywt
large_bodywt <- filter(sleep,bodywt >=200)
large_bodywt
small_bodywtnumber <- c(small_bodywt$bodywt)
small_bodywtnumber
mean(small_bodywtnumber)
large_bodywtnumber <- c(large_bodywt$bodywt)
large_bodywtnumber
mean(large_bodywtnumber)
large_sleeptime <-c(large_bodywt$sleep_total)
large_sleeptime
mean(large_sleeptime)
small_sleeptime <-c(small_bodywt$sleep_total)
small_sleeptime
mean(small_sleeptime)
summary(sleep)
sleeptime_dataframe <-filter(sleep,sleep_total <=19.90)
sleeptime_dataframe
sleeptime_dataframe <-filter(sleep,sleep_total ==19.90)
sleeptime_dataframe
sleeptime_dataframe <-filter(sleep,sleep_total <=19.90)
sleeptime_dataframe
sleeptime_dataframe <-filter(sleep,sleep_total ==19.90)
sleeptime_dataframe
sleeptime_dataframe <-filter(sleep,sleep_total >=18.90)
sleeptime_dataframe
library(tidyverse)
msleep
sleep <- data.frame(msleep)
dim(sleep)
sleeptime_dataframe <-filter(sleep,sleep_total >=18.90)
sleeptime_dataframe
max(sleep,sleep_total)
sleeptime_dataframe <-filter(sleep,sleep_total >=18.90)
sleeptime_dataframe
max(sleep$sleep_total)
max(sleep$sleep_total)
sleeptime_dataframe <-filter(sleep,sleep_total >=18.90)
sleeptime_dataframe
knitr::opts_chunk$set(echo = TRUE)
table(homerange$species)
knitr::opts_chunk$set(echo = TRUE)
library(tidyverse)
homerange <-readr::read_csv("data/Tamburelloetal_HomeRangeDatabase.csv")
dim(homerange)
names(homerange)
glimpse(homerange)
summary(homerange)
homerange$taxon <-as.factor(homerange$taxon)
class(homerange$taxon)
levels(homerange$taxon)
homerange$order <-as.factor(homerange$order)
class(homerange$order)
levels(homerange$order)
select(homerange, taxon)
names(homerange)
select(homerange, taxon:species)
table(homerange$taxon)
table(homerange$species)
species_number <- table(homerange$species)
table(homerange$species)
species_number <-table(homerange$species)
dim(species_number)
select(homerange, trophic.guild)
select(homerange, trophic.guild & species)
select(homerange, trophic.guild, species)
select(homerange, trophic.guild, species)
trophic_species <- select(homerange,trophic.guild, species)
table(trophic_species)
select(trophic_species, contains("carnivore")
select(trophic_species, contains("carnivore"))
select(trophic_species, contains("herbivore"))
filter(trophic_species, trophic.guild =="carnivore")
filter(trophic_species, trophic.guild == "herbivore")
names(trophic_species)
rownames(trophic_species)
filter(trophic_species, trophic.guild =="carnivore")
filter(trophic_species, trophic.guild == "herbivore")
carnivores <- filter(trophic_species, trophic.guild == "carnivore")
carnivores
carnivores <- filter(homerange,trophic.guild == "carnivore")
carnivores
herbivores <- filter(homerange, trophic.guild =="herbivore")
herbivores
mean1 <- table(carnivores$mean.hra.m2)
mean1 <- table(carnivores$mean.hra.m2)
mean(mean1, na.rm = T)
??homerange
mean2 <-table(herbivores$mean.hra.m2)
mean(mean2,na.rm=T)
animaldata -> select(homerange, mean.mass.g, log10.hra, family, genus, species)
animaldata <- select(homerange, mean.mass.g, log10.hra, family, genus, species)
animaldata <- select(homerange, mean.mass.g, log10.hra, family, genus, species)
deer <-filter(animaldata, family == "cervidae")
deer <-filter(animaldata, family == "cervidae")
deer
animaldata <- select(homerange, mean.mass.g, log10.mass, family, genus, species)
deer <-filter(animaldata, family == "cervidae")
deer
deer.log10mass <-deer$log10.mass
desc(deer.log10mass)
deerlog10 <- deer(order(-log10.mass),)
deer <-filter(animaldata, family == "cervidae")
deer
sort(deer, decreasing = T)
??filter
max(deer$mean.mass.g)
max(deer$mean.mass.g)
filter(deer, mean.mass.g == 307227.4)
filter(deer, mean.mass.g >=40000)
table(deer$species)
table(deer$genus)
sort.list(deer, decreasing = T, method = c(log.10mass))
deer$log10.mass
order(deer, decreasing =T)
order(deer.log10mass, decreasing = True)
order(deer.log10mass, decreasing = T)
knitr::opts_chunk$set(echo = TRUE)
order(deer$log10.mass, decreasing = T)
order(deer, decreasing = T)
select(deer, log10.mass (decreasing = T) )
select_if(deer, log10.mass (decreasing = T))
library(tidyverse)
select_if(deer, log10.mass (decreasing = T)
select_if(deer, log10.mass (decreasing = T))
select_if(deer, log10.mass(decreasing = T))
deer_new <- rename(deer, mean_mass_g = "mean.mass.g", log10_mass = "log10.mass", family = "family", genus = "genus", species = "species")
deer_new
arrange(deer_new,log10_mass, by_row = T)
??arrange
arrange(deer_new,desc(log10_mass), by_row = T)
snakes <- filter(homerange, taxon == "snakes")
snakes <- filter(homerange, taxon == "snakes")
snakes
arrange(snakes, desc(mean.mass.g), by_row =T))
arrange(snakes, desc(mean.mass.g), by_row =T)
arrange(snakes,mean.mass.g, by_row =T)
snakes <- (snakes, mean.mass.g:log10.hra)
snakes <- filter(snakes, mean.mass.g:log10.hra)
snakes <- filter.dataframe(snakes, mean.mass.g:log10.hra)
select(snakes, genus,species, mean.mass.g, log10.mass, mean.hra.m2)
snakes_new <-select(snakes, genus,species, mean.mass.g, log10.mass, mean.hra.m2)
arrange(snakes_new, log10.mass)
snakes_new <-select(snakes, genus,species, mean.mass.g, log10.mass, mean.hra.m2, log10.hra)
arrange(snakes_new, log10.hra)
knitr::opts_chunk$set(echo = TRUE)
taxa <- select(homerange, taxon:species)
taxa <-select(homerange, taxon:species)
library(tidyverse)
taxa <-select(homerange, taxon:species)
taxa <-select(homerange, taxon:species)
taxa
filter(trophic_species, trophic.guild =="carnivore")
filter(trophic_species, trophic.guild == "herbivore")
knitr::opts_chunk$set(echo = TRUE)
arrange(snakes_new, mean.hra.m2)
library(tidyverse)
arrange(snakes_new, mean.hra.m2)
knitr::opts_chunk$set(echo = TRUE)
library(tidyverse)
homerange <-readr::read_csv("data/Tamburelloetal_HomeRangeDatabase.csv")
dim(homerange)
names(homerange)
glimpse(homerange)
summary(homerange)
homerange$taxon <-as.factor(homerange$taxon)
class(homerange$taxon)
levels(homerange$taxon)
homerange$order <-as.factor(homerange$order)
class(homerange$order)
levels(homerange$order)
select(homerange, taxon)
names(homerange)
taxa <-select(homerange, taxon:species)
taxa
table(homerange$taxon)
select(homerange, trophic.guild, species)
trophic_species <- select(homerange,trophic.guild, species)
filter(trophic_species, trophic.guild =="carnivore")
filter(trophic_species, trophic.guild == "herbivore")
table()
table(homerange, trophic.guild, species)
table(homerange$trophic.guild, species)
?table
??table
table(trophic_species)
table(homerange, trophic.guild)
select(homerange, trophic.guild, species)
trophic_species <- select(homerange,trophic.guild, species)
table(homerange, trophic.guild)
table(homerange, species)
homerange <-readr::read_csv("data/Tamburelloetal_HomeRangeDatabase.csv")
library(tidyverse)
homerange <-readr::read_csv("data/Tamburelloetal_HomeRangeDatabase.csv")
dim(homerange)
names(homerange)
homerange$taxon <-as.factor(homerange$taxon)
class(homerange$taxon)
levels(homerange$taxon)
homerange$order <-as.factor(homerange$order)
class(homerange$order)
levels(homerange$order)
select(homerange, taxon)
names(homerange)
taxa <-select(homerange, taxon:species)
taxa
table(homerange$taxon)
select(homerange, trophic.guild, species)
trophic_species <- select(homerange,trophic.guild, species)
select(homerange, trophic.guild, species)
trophic_species <- select(homerange,trophic.guild, species)
filter(trophic_species, trophic.guild =="carnivore")
filter(trophic_species, trophic.guild == "herbivore")
table(homerange, species)
table(homerange, "species", "trophic.guild")
table(homerange, "species")
table(homerange, "species")
table(homerange$species, homerange$trophic.guild)
table homerange$trophic.guild)
table(homerange$trophic.guild)
table(homerange$trophic.guild, homerange$species)
table(trophic_species)
table(homerange$species, trophic.guild)
table(homerange$species, homerange$trophic.guild)
setwd("C:/Users/merma/OneDrive/Desktop/BIS15W2023_kkong")
knitr::opts_chunk$set(echo = TRUE)
library(tidyverse)
library(janitor)
library(skimr)
fisheries <- readr::read_csv(file = "data/FAO_1950to2012_111914.csv")
names(fisheries)
dim(fisheries)
anyNA(fisheries)
summary(fisheries)
janitor::clean_names(fisheries)
??mutate
??as.factor
fisheries %>%
as.factor("isscapp_group_number") %>%
as.factor("asfis_species_number") %>%
as.factor("fao_major_fishing_area")
janitor::clean_names(fisheries)
fisheries %>%
as.factor("isscapp_group_number") %>%
as.factor("asfis_species_number") %>%
as.factor("fao_major_fishing_area")
fisheries %>%
as.factor("isscapp_group_number") %>%
as.factor("asfis_species_number") %>%
as.factor("fao_major_fishing_area") %>%
fisheries %>%
as.factor("isscapp_group_number") %>%
as.factor("asfis_species_number") %>%
as.factor("fao_major_fishing_area")
fisheries %>%
as.factor("isscapp_group_number") %>%
as.factor("asfis_species_number") %>%
fisheries %>%
as.factor("isscapp_group_number") %>%
as.factor("asfis_species_number")
names(fisheries)
janitor::clean_names(fisheries)
names(fisheries)
fisheries <- janitor::clean_names(fisheries)
names(fisheries)
fisheries %>%
class("country")
class(country)
dim(fisheries)
summary(fisheries)
fisheries %>%
select(country, isscaap_group_number, asfis_species_number, fao_major_fishing_area) %>%
as.factor(country)
??as.factor
as.factor(fisheries, "country")
as.factor(fisheries$country)
as.factor(fisheries$country)
class(fisheries$country)
as_factor(fisheries$country)
class(fisheries$country)
??Class
as.factor(fisheries$country)
class(fisheries$country)
fisheries <-as.factor(fisheries$country)
fisheries <- janitor::clean_names(fisheries)
fisheries <- readr::read_csv(file = "data/FAO_1950to2012_111914.csv")
names(fisheries)
fisheries <- janitor::clean_names(fisheries)
class(fisheries$country)
class(fisheries$isscaap_group_number)
class(fisheries$asfis_species_number)
class(fisheries$fao_major_fishing_area)
fisheries$country <-as.factor(fisheries$country)
fisheries$country <-as.factor(fisheries$country)
class(fisheries$country)
fisheries$isscaap_group_number<- as.factor(fisheries$isscaap_group_number)
class(fisheries$isscaap_group_number)
fisheries$asfis_species_number <- as.factor(fisheries$asfis_species_number)
class(fisheries$asfis_species_number)
fisheries$fao_major_fishing_area <-as.factor(fisheries$fao_major_fishing_area)
class(fisheries$fao_major_fishing_area)
fisheries_tidy <- fisheries %>%
pivot_longer(-c(country,common_name,isscaap_group_number,isscaap_taxonomic_group,as#fis_species_number,asfis_species_name,fao_major_fishing_area,measure),
names_to = "year",
fisheries_tidy <- fisheries %>%
pivot_longer(-c(country,common_name,isscaap_group_number,isscaap_taxonomic_group,asfis_species_number,asfis_species_name,fao_major_fishing_area,measure),
names_to = "year",
values_to = "catch",
values_drop_na = TRUE) %>%
mutate(year= as.numeric(str_replace(year, 'x', ''))) %>%
mutate(catch= str_replace(catch, c(' F'), replacement = '')) %>%
mutate(catch= str_replace(catch, c('...'), replacement = '')) %>%
mutate(catch= str_replace(catch, c('-'), replacement = '')) %>%
mutate(catch= str_replace(catch, c('0 0'), replacement = ''))
fisheries_tidy$catch <- as.numeric(fisheries_tidy$catch)
tabyl(fisheries_tidy$country)
fisheries_tidy %>%
count(country)
fisheries_tidy %>%
tabyl(country)
fisheries_tidy %>%
group_by(country)
fisheries_tidy %>%
group_by(country) %>%
count(country)
fisheries_tidy %>%
select(country, names) %>%
tabyl(country)
fisheries_tidy %>%
select(country,names) %>%
tabyl(country)
fisheries_tidy %>%
select(country,names) %>%
fisheries_tidy %>%
select(country,names)
fisheries_tidy %>%
filter(country, names)
fisheries_tidy %>%
select(country)
fisheries_tidy %>%
select(country, names)
fisheries_tidy %>%
tabyl(country,names)
fisheries_tidy %>%
tabyl(country)
fisheries_tidy %>%
group_by(country)
fisheries_tidy %>%
group_by(country) %>%
summarize(total(n))
fisheries_tidy %>%
group_by(country) %>%
summarize(total=((n))
fisheries_tidy %>%
group_by(country) %>%
summarize(total=((n))
fisheries_tidy %>%
group_by(country) %>%
summarize(total=((n)))
fisheries_tidy %>%
group_by(country) %>%
fisheries_tidy %>%
group_by(country)
table(fisheries_tidy$country)
fisheries <- readr::read_csv(file = "data/FAO_1950to2012_111914.csv")
fisheries <- janitor::clean_names(fisheries)
fisheries_tidy <- fisheries %>%
pivot_longer(-c(country,common_name,isscaap_group_number,isscaap_taxonomic_group,asfis_species_number,asfis_species_name,fao_major_fishing_area,measure),
names_to = "year",
values_to = "catch",
values_drop_na = TRUE) %>%
mutate(year= as.numeric(str_replace(year, 'x', ''))) %>%
mutate(catch= str_replace(catch, c(' F'), replacement = '')) %>%
mutate(catch= str_replace(catch, c('...'), replacement = '')) %>%
mutate(catch= str_replace(catch, c('-'), replacement = '')) %>%
mutate(catch= str_replace(catch, c('0 0'), replacement = ''))
fisheries_tidy$catch <- as.numeric(fisheries_tidy$catch)
table(fisheries_tidy$country)
fisheries_tidy %>%
count(country,name)
fisheries_tidy %>%
count(country,names)
fisheries_tidy %>%
count(country)
