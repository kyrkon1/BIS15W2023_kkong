knitr::opts_chunk$set(echo = TRUE)
#install.packages("maps", repos = "http://cran.us.r-project.org")
#install.packages("leaflet", repos = "http://cran.us.r-project.org")
#install.packages("rgdal", repos = "http://cran.us.r-project.org")
#install.packages("raster")
#install.packages("tmap", repos = "http://cran.us.r-project.org")
#install.packages("mapproj", repos = "http://cran.us.r-project.org")
#install.packages("countrycode")
library(tidyverse)
library(naniar)
library(janitor)
library(here)
library(shiny)
library(shinydashboard)
library(ggplot2)
library(maps)
library(leaflet)
library(magrittr)
library(rvest)
library(rgdal)
library(rworldmap)
#library(tmap)
library(sf)
library(mapproj)
getwd()
happy_2020 <- read_csv("../happiness_data/2020.csv") %>% clean_names()
happy_2021 <- read_csv("../happiness_data/2021.csv") %>% clean_names()
names(happy_2020)
happy_2020$year <- "2020"
happy_2021$year <- "2021"
happy_2020<-happy_2020 %>%
rename(region = "country_name")
happy_2021<-happy_2021 %>%
rename(region = "country_name")
names(happy_2020)
names(happy_2021)
mapdata<-map_data("world")
mapdata2020 <-map_data("world")
mapdata2020<-left_join(mapdata2020,happy_2020, by="region")
mapdata2021<-map_data("world")
view(mapdata2021)
mapdata2021 <-left_join(mapdata2021, happy_2021, by="region")
View(mapdata2021)
glimpse(mapdata2020)
summary(mapdata2020$ladder_score)
mapdata2020 <-mapdata2020 %>%
mutate(range_ladder_score= case_when(ladder_score < 2.567 ~ "very small",
ladder_score >= 2.567 & ladder_score <=5.747 ~ "small",
ladder_score >= 5.747 & ladder_score <7.809 ~"medium",
ladder_score >= 7.809 ~ "large"))
summary(mapdata2020$social_support)
mapdata2020 %>%
relocate(social_support) %>%
filter(!is.na(social_support))
map_socialsupport<-mapdata2020 %>%
ggplot(aes(x = long, y= lat, group=group))+
geom_polygon(aes(fill=social_support), color= "black")
map_socialsupport
map_socialsupport +scale_fill_gradient(name = "Range of Factor", low = "yellow", high= "dark blue", na.value ="grey50")
map_healthy_life_expectancy <-mapdata2020 %>%
ggplot(aes(x=long,y=lat,group=group))+
geom_polygon(aes(fill=healthy_life_expectancy),color="black")
map_healthy_life_expectancy
map2_social_support <-
mapdata2021 %>%
ggplot(aes(x=long, y=lat, group=group))+
geom_polygon(aes(fill=social_support), color= "black")
map2_social_support <-
mapdata2021 %>%
ggplot(aes(x=long, y=lat, group=group))+
geom_polygon(aes(fill=social_support), color= "black")
map2_social_support +
scale_fill_gradient(name= "Range of Factor", low= "yellow", high = "dark blue", na.value = "grey50")
map2_healthy_life_expectancy <-mapdata2021 %>%
ggplot(aes(x=long, y=lat,group=group))+
geom_polygon(aes(fill=healthy_life_expectancy), color= "black")
map2_healthy_life_expectancy+
scale_fill_gradient(name= "Range of Factor", low = "yellow", high = "dark blue", na.value = "grey50")
names(mapdata2020)
library(shiny)
ui <- fluidPage(titlePanel("World Map of Factors for 2020",
radioButtons("x", "Select Factor Variable",
choices =c("ladder_score", "social_support", "healthy_life_expectancy", "freedom_to_make_life_choices", "generosity", "perceptions_of_corruption"), selected= "ladder_score"),
plotOutput("plot", width = "600px", height = "500px")
))
library(shiny)
ui <- fluidPage(titlePanel("World Map of Factors for 2020"),
selectInput("x", "Select Factor Variable",
choices =c("ladder_score", "social_support", "healthy_life_expectancy", "freedom_to_make_life_choices", "generosity", "perceptions_of_corruption"), selected= "ladder_score"),
plotOutput("plot", width = "600px", height = "500px")
))
library(shiny)
ui <- fluidPage(titlePanel("World Map of Factors for 2020"),
selectInput("x", "Select Factor Variable",
choices =c("ladder_score", "social_support", "healthy_life_expectancy", "freedom_to_make_life_choices", "generosity", "perceptions_of_corruption"), selected= "ladder_score"),
plotOutput("plot", width = "600px", height = "500px")
)
server <- function(input, output, session) {
session$onSessionEnded(stopApp)
output$plot <- renderPlot({
ggplot(mapdata2020,aes(x=long, y=lat,group=group))+
geom_polygon(aes_string(fill=input$x), color= "black")+
scale_fill_gradient(name= "Range of Factor", low = "yellow", high = "dark blue", na.value = "grey50")+
labs(x= "Longitude", y= "Latitude")
})
}
shinyApp(ui, server)
library(shiny)
ui <- fluidPage(titlePanel("World Map of Factors for 2020"),
selectInput("x", "Select Factor Variable",
choices =c("ladder_score", "social_support", "healthy_life_expectancy", "freedom_to_make_life_choices", "generosity", "perceptions_of_corruption"), selected= "ladder_score"),
plotOutput("plot", width = "800px", height = "500px")
)
server <- function(input, output, session) {
session$onSessionEnded(stopApp)
output$plot <- renderPlot({
ggplot(mapdata2020,aes(x=long, y=lat,group=group))+
geom_polygon(aes_string(fill=input$x), color= "black")+
scale_fill_gradient(name= "Range of Factor", low = "yellow", high = "dark blue", na.value = "grey50")+
labs(x= "Longitude", y= "Latitude")
})
}
shinyApp(ui, server)
library(shiny)
ui <- dashboardPage(
dashboardHeader(title="World Map of Factors for 2020"),
dashboardSidebar(disable =T),
dashboardBody(selectInput("x", "Select Factor Variable", choices =c("ladder_score", "social_support", "healthy_life_expectancy", "freedom_to_make_life_choices", "generosity", "perceptions_of_corruption"), selected= "ladder_score"),
plotOutput("plot", width = "800px", height = "500px")
))
server <- function(input, output, session) {
session$onSessionEnded(stopApp)
output$plot <- renderPlot({
ggplot(mapdata2020,aes(x=long, y=lat,group=group))+
geom_polygon(aes_string(fill=input$x), color= "black")+
scale_fill_gradient(name= "Range of Factor", low = "yellow", high = "dark blue", na.value = "grey50")+
labs(x= "Longitude", y= "Latitude")
})
}
shinyApp(ui, server)
library(shiny)
ui <- dashboardPage(
dashboardHeader(title="2020 World Map"),
dashboardSidebar(disable =T),
dashboardBody(selectInput("x", "Select Factor Variable", choices =c("ladder_score", "social_support", "healthy_life_expectancy", "freedom_to_make_life_choices", "generosity", "perceptions_of_corruption"), selected= "ladder_score"),
plotOutput("plot", width = "800px", height = "500px")
))
server <- function(input, output, session) {
session$onSessionEnded(stopApp)
output$plot <- renderPlot({
ggplot(mapdata2020,aes(x=long, y=lat,group=group))+
geom_polygon(aes_string(fill=input$x), color= "black")+
scale_fill_gradient(name= "Range of Factor", low = "yellow", high = "dark blue", na.value = "grey50")+
labs(x= "Longitude", y= "Latitude")
})
}
shinyApp(ui, server)
library(shiny)
ui <- dashboardPage(
dashboardHeader(title="2020 World Map"),
dashboardSidebar(disable =T),
dashboardBody(selectInput("x", "Select Factor Variable", choices =c("ladder_score", "social_support", "healthy_life_expectancy", "freedom_to_make_life_choices", "generosity", "perceptions_of_corruption"), selected= "ladder_score"),
plotOutput("plot", width = "800px", height = "500px")
))
server <- function(input, output, session) {
session$onSessionEnded(stopApp)
output$plot <- renderPlot({
ggplot(mapdata2020,aes(x=long, y=lat,group=group))+
geom_polygon(aes_string(fill=input$x), color= "black")+
scale_fill_gradient(name= "Range of Factor", low = "yellow", high = "dark blue", na.value = "grey50")+
labs(x= "Longitude", y= "Latitude", title = "Global Happiness by Factors in 2020")
})
}
shinyApp(ui, server)
library(shiny)
ui <- dashboardPage(
dashboardHeader(title="2020 World Map"),
dashboardSidebar(disable =T),
dashboardBody(selectInput("x", "Select Factor Variable", choices =c("ladder_score", "social_support", "healthy_life_expectancy", "freedom_to_make_life_choices", "generosity", "perceptions_of_corruption"), selected= "ladder_score"),
plotOutput("plot", width = "800px", height = "500px")
))
server <- function(input, output, session) {
session$onSessionEnded(stopApp)
output$plot <- renderPlot({
ggplot(mapdata2020,aes(x=long, y=lat,group=group))+
geom_polygon(aes_string(fill=input$x), color= "black")+
scale_fill_gradient(name= "Range of Factor", low = "yellow", high = "dark blue", na.value = "grey50")+
labs(x= "Longitude", y= "Latitude", title = "Global Happiness by Factors in 2020")
})
}
shinyApp(ui, server)
library(shiny)
ui <- dashboardPage(
dashboardHeader(title="2021 World Map"),
dashboardSidebar(disable =T),
dashboardBody(selectInput("x", "Select Factor Variable", choices =c("ladder_score", "social_support", "healthy_life_expectancy", "freedom_to_make_life_choices", "generosity", "perceptions_of_corruption"), selected= "ladder_score"),
plotOutput("plot", width = "800px", height = "500px")
))
server <- function(input, output, session) {
session$onSessionEnded(stopApp)
output$plot <- renderPlot({
ggplot(mapdata2021,aes(x=long, y=lat,group=group))+
geom_polygon(aes_string(fill=input$x), color= "black")+
scale_fill_gradient(name= "Range of Factor", low = "yellow", high = "dark blue", na.value = "grey50")+
labs(x= "Longitude", y= "Latitude", title = "Global Happiness by Factors in 2021")
})
}
shinyApp(ui, server)
