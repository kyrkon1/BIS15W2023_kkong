lin.model = lm(Hwt ~ Bwt, data = no.outliers.cats)
# ii) The standard deviation of the error.
s.e = summary(lin.model)$sigma
# iii) The coefficient variation
r.2 = summary(lin.model)$r.squared
# iii) The coefficient variation
r.2 = summary(lin.model)$r.squared
# You may also display estimates for B_0 and B_1 by:
the.betas = lin.model$coefficients
#(e) Plot the regression line on your plot.
#     Use the plot function followed by abline(the.betas)
plot(no.outliers.cats$Bwt,no.outliers.cats$Hwt,
xlab='Body Weight',ylab="Heart Weight",
main='Heart vs Body Weight of Cats Scatter Plot Without Outliers')
abline(the.betas)
#(f) Construct a 95% C.I. for the slope.
#    Note: the command below gives the C.I.
#    for the slope and intercept.
confint(lin.model,level = 0.95)
ei = lin.model$residuals
plot(y.hat,ei)
#(g) Check the assumption that the errors have constant variance
#    Describe the plot.
y.hat = lin.model$fitted.values
ei = lin.model$residuals
plot(y.hat,ei)
abline(h = 0, col = "purple")
#(h) Check the assumption that the errors are normally distributed
#    Explain what you see.
qqnorm(ei);qqline(ei)
plot(cats$Bwt,cats$Hwt, xlab='Body Weight',ylab="Heart Weight",
main='Heart vs Body Weight of Cats Scatter Plot')
# Plot new dataset without outliers:
plot(no.outliers.cats$Bwt,no.outliers.cats$Hwt,
xlab='Body Weight',ylab="Heart Weight",
main='Heart vs Body Weight of Cats Scatter Plot Without Outliers')
abline(the.betas)
plot(y.hat,ei)
abline(h = 0, col = "purple")
#(h) Check the assumption that the errors are normally distributed
#    Explain what you see.
qqnorm(ei);qqline(ei)
#(g) Check the assumption that the errors have constant variance
#    Describe the plot.
y.hat = lin.model$fitted.values
ei = lin.model$residuals
+ 5 - 3 * 2
+ 8 / 2 ** 2
(5-3)*2
(8/2)*2
((8/2)*2)*2
pi <- 3.14159265359
pi(2)
2(pi)
2*pi
?mean
x <- c(2, 8, 6, 6, 7, 4, 9, 9, 9, 10)
mean(x)
median(x)
sleeptime_dataframe <-filter(sleep,sleep_total <=19.90)
library(tidyverse)
msleep
sleep <- data.frame(msleep)
dim(sleep)
glimpse(sleep)
summary(sleep)
names(sleep)
table(sleep$vore)
small_bodywt <-filter(sleep,bodywt <= 1)
small_bodywt
large_bodywt <- filter(sleep,bodywt >=200)
large_bodywt
small_bodywtnumber <- c(small_bodywt$bodywt)
small_bodywtnumber
mean(small_bodywtnumber)
large_bodywtnumber <- c(large_bodywt$bodywt)
large_bodywtnumber
mean(large_bodywtnumber)
large_sleeptime <-c(large_bodywt$sleep_total)
large_sleeptime
mean(large_sleeptime)
small_sleeptime <-c(small_bodywt$sleep_total)
small_sleeptime
mean(small_sleeptime)
summary(sleep)
sleeptime_dataframe <-filter(sleep,sleep_total <=19.90)
sleeptime_dataframe
sleeptime_dataframe <-filter(sleep,sleep_total ==19.90)
sleeptime_dataframe
sleeptime_dataframe <-filter(sleep,sleep_total <=19.90)
sleeptime_dataframe
sleeptime_dataframe <-filter(sleep,sleep_total ==19.90)
sleeptime_dataframe
sleeptime_dataframe <-filter(sleep,sleep_total >=18.90)
sleeptime_dataframe
library(tidyverse)
msleep
sleep <- data.frame(msleep)
dim(sleep)
sleeptime_dataframe <-filter(sleep,sleep_total >=18.90)
sleeptime_dataframe
max(sleep,sleep_total)
sleeptime_dataframe <-filter(sleep,sleep_total >=18.90)
sleeptime_dataframe
max(sleep$sleep_total)
max(sleep$sleep_total)
sleeptime_dataframe <-filter(sleep,sleep_total >=18.90)
sleeptime_dataframe
knitr::opts_chunk$set(echo = TRUE)
table(homerange$species)
knitr::opts_chunk$set(echo = TRUE)
library(tidyverse)
homerange <-readr::read_csv("data/Tamburelloetal_HomeRangeDatabase.csv")
dim(homerange)
names(homerange)
glimpse(homerange)
summary(homerange)
homerange$taxon <-as.factor(homerange$taxon)
class(homerange$taxon)
levels(homerange$taxon)
homerange$order <-as.factor(homerange$order)
class(homerange$order)
levels(homerange$order)
select(homerange, taxon)
names(homerange)
select(homerange, taxon:species)
table(homerange$taxon)
table(homerange$species)
species_number <- table(homerange$species)
table(homerange$species)
species_number <-table(homerange$species)
dim(species_number)
select(homerange, trophic.guild)
select(homerange, trophic.guild & species)
select(homerange, trophic.guild, species)
select(homerange, trophic.guild, species)
trophic_species <- select(homerange,trophic.guild, species)
table(trophic_species)
select(trophic_species, contains("carnivore")
select(trophic_species, contains("carnivore"))
select(trophic_species, contains("herbivore"))
filter(trophic_species, trophic.guild =="carnivore")
filter(trophic_species, trophic.guild == "herbivore")
names(trophic_species)
rownames(trophic_species)
filter(trophic_species, trophic.guild =="carnivore")
filter(trophic_species, trophic.guild == "herbivore")
carnivores <- filter(trophic_species, trophic.guild == "carnivore")
carnivores
carnivores <- filter(homerange,trophic.guild == "carnivore")
carnivores
herbivores <- filter(homerange, trophic.guild =="herbivore")
herbivores
mean1 <- table(carnivores$mean.hra.m2)
mean1 <- table(carnivores$mean.hra.m2)
mean(mean1, na.rm = T)
??homerange
mean2 <-table(herbivores$mean.hra.m2)
mean(mean2,na.rm=T)
animaldata -> select(homerange, mean.mass.g, log10.hra, family, genus, species)
animaldata <- select(homerange, mean.mass.g, log10.hra, family, genus, species)
animaldata <- select(homerange, mean.mass.g, log10.hra, family, genus, species)
deer <-filter(animaldata, family == "cervidae")
deer <-filter(animaldata, family == "cervidae")
deer
animaldata <- select(homerange, mean.mass.g, log10.mass, family, genus, species)
deer <-filter(animaldata, family == "cervidae")
deer
deer.log10mass <-deer$log10.mass
desc(deer.log10mass)
deerlog10 <- deer(order(-log10.mass),)
deer <-filter(animaldata, family == "cervidae")
deer
sort(deer, decreasing = T)
??filter
max(deer$mean.mass.g)
max(deer$mean.mass.g)
filter(deer, mean.mass.g == 307227.4)
filter(deer, mean.mass.g >=40000)
table(deer$species)
table(deer$genus)
sort.list(deer, decreasing = T, method = c(log.10mass))
deer$log10.mass
order(deer, decreasing =T)
order(deer.log10mass, decreasing = True)
order(deer.log10mass, decreasing = T)
knitr::opts_chunk$set(echo = TRUE)
order(deer$log10.mass, decreasing = T)
order(deer, decreasing = T)
select(deer, log10.mass (decreasing = T) )
select_if(deer, log10.mass (decreasing = T))
library(tidyverse)
select_if(deer, log10.mass (decreasing = T)
select_if(deer, log10.mass (decreasing = T))
select_if(deer, log10.mass(decreasing = T))
deer_new <- rename(deer, mean_mass_g = "mean.mass.g", log10_mass = "log10.mass", family = "family", genus = "genus", species = "species")
deer_new
arrange(deer_new,log10_mass, by_row = T)
??arrange
arrange(deer_new,desc(log10_mass), by_row = T)
snakes <- filter(homerange, taxon == "snakes")
snakes <- filter(homerange, taxon == "snakes")
snakes
arrange(snakes, desc(mean.mass.g), by_row =T))
arrange(snakes, desc(mean.mass.g), by_row =T)
arrange(snakes,mean.mass.g, by_row =T)
snakes <- (snakes, mean.mass.g:log10.hra)
snakes <- filter(snakes, mean.mass.g:log10.hra)
snakes <- filter.dataframe(snakes, mean.mass.g:log10.hra)
select(snakes, genus,species, mean.mass.g, log10.mass, mean.hra.m2)
snakes_new <-select(snakes, genus,species, mean.mass.g, log10.mass, mean.hra.m2)
arrange(snakes_new, log10.mass)
snakes_new <-select(snakes, genus,species, mean.mass.g, log10.mass, mean.hra.m2, log10.hra)
arrange(snakes_new, log10.hra)
knitr::opts_chunk$set(echo = TRUE)
taxa <- select(homerange, taxon:species)
taxa <-select(homerange, taxon:species)
library(tidyverse)
taxa <-select(homerange, taxon:species)
taxa <-select(homerange, taxon:species)
taxa
filter(trophic_species, trophic.guild =="carnivore")
filter(trophic_species, trophic.guild == "herbivore")
knitr::opts_chunk$set(echo = TRUE)
arrange(snakes_new, mean.hra.m2)
library(tidyverse)
arrange(snakes_new, mean.hra.m2)
knitr::opts_chunk$set(echo = TRUE)
library(tidyverse)
homerange <-readr::read_csv("data/Tamburelloetal_HomeRangeDatabase.csv")
dim(homerange)
names(homerange)
glimpse(homerange)
summary(homerange)
homerange$taxon <-as.factor(homerange$taxon)
class(homerange$taxon)
levels(homerange$taxon)
homerange$order <-as.factor(homerange$order)
class(homerange$order)
levels(homerange$order)
select(homerange, taxon)
names(homerange)
taxa <-select(homerange, taxon:species)
taxa
table(homerange$taxon)
select(homerange, trophic.guild, species)
trophic_species <- select(homerange,trophic.guild, species)
filter(trophic_species, trophic.guild =="carnivore")
filter(trophic_species, trophic.guild == "herbivore")
table()
table(homerange, trophic.guild, species)
table(homerange$trophic.guild, species)
?table
??table
table(trophic_species)
table(homerange, trophic.guild)
select(homerange, trophic.guild, species)
trophic_species <- select(homerange,trophic.guild, species)
table(homerange, trophic.guild)
table(homerange, species)
homerange <-readr::read_csv("data/Tamburelloetal_HomeRangeDatabase.csv")
library(tidyverse)
homerange <-readr::read_csv("data/Tamburelloetal_HomeRangeDatabase.csv")
dim(homerange)
names(homerange)
homerange$taxon <-as.factor(homerange$taxon)
class(homerange$taxon)
levels(homerange$taxon)
homerange$order <-as.factor(homerange$order)
class(homerange$order)
levels(homerange$order)
select(homerange, taxon)
names(homerange)
taxa <-select(homerange, taxon:species)
taxa
table(homerange$taxon)
select(homerange, trophic.guild, species)
trophic_species <- select(homerange,trophic.guild, species)
select(homerange, trophic.guild, species)
trophic_species <- select(homerange,trophic.guild, species)
filter(trophic_species, trophic.guild =="carnivore")
filter(trophic_species, trophic.guild == "herbivore")
table(homerange, species)
table(homerange, "species", "trophic.guild")
table(homerange, "species")
table(homerange, "species")
table(homerange$species, homerange$trophic.guild)
table homerange$trophic.guild)
table(homerange$trophic.guild)
table(homerange$trophic.guild, homerange$species)
table(trophic_species)
table(homerange$species, trophic.guild)
table(homerange$species, homerange$trophic.guild)
library("tidyverse")
library("janitor")
library("skimr")
library("palmerpenguins")
glimpse(penguins)
penguins %>%
group_by(island) %>%
summarize(mean_bodymass = mean(body_mass_g))
penguins %>%
group_by(island) %>%
summarize(mean_bodymass= mean(body_mass_g, na.rm = T))
penguins %>%
filter(!is.na(body_mass_g)) %>%
group_by(island) %>%
summarize(mean_bodymass = mean(body_mass_g),
sd_bodymass =sd(body_mass_g))
names(penguins)
View(trophic_species)
penguins %>%
group_by(island) %>%
summarize(number_NAs=sum(is.na(body_mass_g)))
penguins %>%
filter(!is.na(body_mass_g)) %>%
group_by(island) %>%
summarize(mean_bodymass = mean(body_mass_g),
sd_bodymass =sd(body_mass_g), n=n())
penguins %>%
group_by(species, island) %>%
summarize(n=n(), .groups='keep') #the groups argument here prevents a warning message
penguins %>%
count(island, sort = T) #sort=T sorts the column in descending order
penguins %>%
group_by(island) %>%
summarize(n=n())
penguins %>%
count(island, species, sort = T) # sort=T will arrange in descending order
levels(penguins$species)
penguins %>%
filter(species == "Adelie") %>%
select(bill_length_mm, bill_depth_mm,flipper_length_mm, body_mass_g) %>%
summarize(mean_bill_length = mean(bill_length_mm, na.rm = T),
mean_bill_depth = mean(bill_depth_mm, na.rm = T),
mean_flipper_length = mean(flipper_length_mm, na.rm= T), mean_body_mass = mean(body_mass_g, na.rm =T))
penguins %>%
filter(species == "Adelie") %>%
select(bill_length_mm, bill_depth_mm,flipper_length_mm, body_mass_g) %>%
summarize(mean_bill_length = mean(bill_length_mm, na.rm = T),
mean_bill_depth = mean(bill_depth_mm, na.rm = T),
mean_flipper_length = mean(flipper_length_mm, na.rm= T), mean_body_mass = mean(body_mass_g, na.rm =T), n=n())
penguins %>% count(species)
penguins %>%
group_by(species) %>%
summarize(mean_bill_length =mean(bill_length_mm, na.rm =T),sd_bill_length_mm =sd(bill_length_mm, na.rm=T))
penguins %>% count(sex,island)
penguins %>%
summarize(distinct_species = n_distinct(species),
distinct_island = n_distinct(island),
distinct_sex = n_distinct(sex))
names(penguins)
penguins %>%
summarize(across(c(species, island, sex), n_distinct))
penguins %>%
summarize(across(contains("mm"), mean, na.rm=T))
penguins %>%
group_by(sex) %>%
summarize(across(contains("mm"), mean, na.rm=T))
penguins %>%
summarise_all(mean, na.rm=T)
penguins %>%
summarise(across(!c(species, island, sex, year),
mean, na.rm=T))
penguins %>%
summarise(across(starts_with("bill"), mean, na.rm=T))
names(penguins)
penguins %>%
group_by(species)
penguins %>%
group_by(species) %>%
select(bill_length_mm, bill_depth_mm, flipper_length_mm)
summarize(mean_bill_length = mean(bill_length_mm, na.rm =T),
sd_bill_length =sd(bill_length_mm, na.rm=T),
mean_bill_depth = mean(bill_depth_mm, na.rm =T),
sd_bill_depth =sd(bill_depth_mm, na.rm =T),
mean_flipper_length_mm =mean(flipper_length_mm,na.rm =T),
sd_flipper_length = sd(flipper_length_mm, na.rm =T))
names(penguins)
penguins %>%
group_by(species) %>%
select(bill_length_mm, bill_depth_mm, flipper_length_mm)
summarize(mean_bill_length = mean(bill_length_mm, na.rm =T),
sd_bill_length =sd(bill_length_mm, na.rm=T),
mean_bill_depth = mean(bill_depth_mm, na.rm =T),
sd_bill_depth =sd(bill_depth_mm, na.rm =T),
mean_flipper_length_mm =mean(flipper_length_mm,na.rm =T),
sd_flipper_length = sd(flipper_length_mm, na.rm =T))
penguins %>%
group_by(species) %>%
summarize(across(contains("mm", mean, na.rm=T), n_samples =n()))
penguins %>%
group_by(species) %>%
summarize(across(contains("mm"), mean, na.rm=T), n_samples =n()))
penguins %>%
group_by(species) %>%
summarize(across(contains("mm"),sd, mean, na.rm=T), n_samples =n()))
penguins %>%
group_by(species) %>%
summarize(across(contains("mm"),sd, mean, na.rm=T), n_samples =n())
penguins %>%
group_by(species) %>%
summarize(across(contains("mm"), mean, na.rm=T), n_samples =n())
penguins %>%
group_by(species) %>%
summarize(across(contains("mm"), sd, na.rm=T), n_samples=n())
setwd("C:/Users/merma/OneDrive/Desktop/BIS15W2023_kkong")
superhero_info %>%
select(name, height, weight) %>%
filter(height >= 300| weight >=450)
library("tidyverse")
superhero_info <- readr::read_csv("data/heroes_information.csv", na = c("", "-99", "-"))
superhero_powers <- readr::read_csv("data/super_hero_powers.csv", na = c("", "-99", "-"))
superhero_info <-rename(superhero_info, gender = "Gender", eye_color = "Eye color", race = "Race", hair_color = "Hair color", height = "Height", publisher = "Publisher", skin_color = "Skin color", alignment = "Alignment", weight = "Weight")
names(superhero_info)
superhero_powers <- janitor::clean_names(superhero_powers)
superhero_info <-
janitor::clean_names(superhero_info)
superhero_powers %>%
filter(hero_names == "Hulk") %>%
select_if(all_vers(.=="TRUE"))
superhero_powers %>%
filter(hero_names == "Hulk") %>%
select_if(all_vars(.=="TRUE"))
knitr::opts_chunk$set(echo = TRUE)
library(tidyverse)
library(janitor)
elephants<- read.csv("data/ElephantsMF.csv")
elephants<- read.csv("data/ElephantsMF.csv")
structure(elephants)
glimpse(elephants)
library("janitor)")
library("janitor")
elephants <-janitor::clean_names(elephants)
elephants <-janitor::clean_names(elephants)
names(elephants)
elephants$sex <-as.factor(elephants$sex)
class(elephants$sex)
elephants %>%
tabyl(sex)
elephants %>%
group_by(age) %>%
summarize(mean_age = mean(age, na.rm =T), n=n())
elephants %>%
select(age) %>%
mean(age)
mean(elephants$age)
mean_age <-mean(elephants$age)
mean_height <- mean(elephant$height)
mean_height <- mean(elephants$height)
elephants %>%
group_by (sex) %>%
summarize (mean_age = mean(age, na.rm =T),
mean_height = mean(height, na.rm= T),
n=n())
elephants %>%
group_by(sex) %>%
filter(age >= 20) %>%
summarize(mean_height = mean(height, na.rm =T),
min_height = min(height,na.rm=T),
max_height =max(height,na.rm =T),
n=n())
elephants %>%
group_by(sex) %>%
filter(age >= 20)
transects <-read.csv("data/InvindoData_DryadVersion.csv")
transects <-read.csv("data/IvindoData_DryadVersion.csv")
glimpse(transects)
transects <-janitor::clean_names(transects)
transects <-janitor::clean_names(transects)
name(transects)
transects <-janitor::clean_names(transects)
names(transects)
transects$hunt_cat <-as.factor(transects$hunt_cat)
class(transects$hunt_cat)
transects$land_use <-as.factor(transects$land_use)
class(transects$land_use)
transects %>%
group_by(diversity_bird_species, diversity_mammal_species) %>%
filter(hunt_cat == "High", hunt_cat = "Moderate") %>%
summarize(mean_diversity_bird = mean(diversity_bird_species, na.rm =T),
mean_diversity_mammals = mean(diversity_mammal_species, na.rm =T),
n=(n))
transects %>%
group_by(diversity_bird_species, diversity_mammal_species) %>%
filter(hunt_cat == "High", hunt_cat == "Moderate") %>%
summarize(mean_diversity_bird = mean(diversity_bird_species, na.rm =T),
mean_diversity_mammals = mean(diversity_mammal_species, na.rm =T),
n=(n))
transects %>%
group_by(diversity_bird_species, diversity_mammal_species) %>%
filter(hunt_cat == "High", hunt_cat == "Moderate") %>%
summarize(mean_diversity_bird = mean(diversity_bird_species, na.rm =T),
mean_diversity_mammals = mean(diversity_mammal_species, na.rm =T))
transects %>%
group_by(diversity_bird_species, diversity_mammal_species) %>%
filter(hunt_cat == "High", hunt_cat == "Moderate") %>%
summarize(mean_diversity_birds = mean(diversity_bird_species, na.rm =T),
mean_diversity_mammals = mean(diversity_mammal_species, na.rm =T))
transects %>%
group_by(diversity_bird_species, diversity_mammal_species) %>%
filter(hunt_cat == "High", hunt_cat == "Moderate") %>%
transects %>%
group_by(diversity_bird_species, diversity_mammal_species) %>%
filter(hunt_cat == "High", hunt_cat == "Moderate")
transects %>%
group_by(diversity_mammal_species, diversity_bird_species) %>%
filter(hunt_cat == "High", hunt_cat == "Moderate")
transects %>%
group_by(hunt_cat) %>%
summarize(mean_diversity_bird = mean(diversity_bird_species, na.rm=T),
mean_diversity_mammal = mean(diversity_mammal_species, na.rm =T))
