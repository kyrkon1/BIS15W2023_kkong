ggplot(aes(x=year, y= lifeExp, group = continent))+
geom_line(alpha=0.5)
gapminder %>%
ggplot(aes(x=year, y= lifeExp, group = country, color = continent))+
geom_line(alpha=0.5)
gapminder %>%
ggplot(aes(x=year, y= lifeExp, group= country, color= continent))+
geom_line()
gapminder %>%
select(year, lifeExp)
gapminder %>%
ggplot(aes(x=year, y= lifeExp)) +
geom_col()
gapminder %>%
filter(year ==1952| year= 2007) %>%
gapminder %>%
filter(year ==1952| year== 2007) %>%
ggplot(aes(x=year, y= lifeExp)) +
geom_col()
gapminder %>%
filter(year ==1952| year== 2007) %>%
ggplot(aes(x=year, y= lifeExp)) +
geom_col(color=country)
gapminder %>%
filter(year ==1952| year== 2007) %>%
ggplot(aes(x=year, y= lifeExp, color = country_colors)) +
geom_col()
gapminder %>%
filter(year ==1952| year== 2007) %>%
ggplot(aes(x=year, y= lifeExp)) +
geom_col()
gapminder %>%
filter(year ==1952| year== 2007) %>%
ggplot(aes(x=year, y= lifeExp)) +
geom_col()+
labs(title = "Life Expectancy from 1952 and 2007",
x= "Year", y= "Life Expectancy")
gapminder %>%
ggplot(aes(x=year, y= lifeExp)) +
geom_col()+
labs(title = "Life Expectancy from 1952 and 2007",
x= "Year", y= "Life Expectancy")
gapminder %>%
filter(year== 1952| year == 2007) %>%
ggplot(aes(x = year, y = lifeExp)) +
geom_col(alpha = 0.5)+
labs(title "Life Expectancy for 1952 and 2007")
gapminder %>%
filter(year== 1952| year == 2007) %>%
ggplot(aes(x = year, y = lifeExp)) +
geom_col(alpha = 0.5)+
labs(title ="Life Expectancy for 1952 and 2007")
gapminder %>%
filter(year== 1952| year == 2007) %>%
ggplot(aes(x = year, y = lifeExp)) +
geom_col(alpha = 0.5)+
labs(title ="Life Expectancy for 1952 and 2007", x= "Year", y= "Life Expectancy")
knitr::opts_chunk$set(echo = TRUE)
library(tidyverse)
library(janitor)
options(scipen=999) #disables scientific notation when printing
library(here)
population <- read_csv(here("practice_midterm2", "data", "population_total.csv"))
income <- read_csv(here("practice_midterm2", "data", "income_per_person_gdppercapita_ppp_inflation_adjusted.csv"))
life_expectancy <- read_csv(here("practice_midterm2" , "data", "life_expectancy_years.csv"))
income_tidy <-income %>%
pivot_longer(-country,
names_to = "year",
values_to = "income") %>%
mutate(country= as_factor(country))
life_expectancy_tidy <-life_expectancy %>%
pivot_longer(-country,
names_to = "year",
values_to = "life_expectancy") %>%
mutate(country= as_factor(country))
population_tidy <-population %>%
pivot_longer(-country,
names_to = "year",
values_to = "population") %>%
mutate(country= as_factor(country))
income_tidy %>%
summarize(n_country= n_distinct(country))
income_tidy %>%
count(country) %>%
select(country)
population_tidy %>%
summarize(n_country = n_distinct(country))
population_tidy %>%
count(country) %>%
select(country)
life_expectancy_tidy %>%
summarize(n_country= n_distinct(country))
life_expectancy_tidy %>%
count(country) %>%
select(country)
life_expectancy_tidy %>%
filter(between(year,1920,2020)) %>%
group_by(country) %>%
summarize(mean_life_expectancy= mean(life_expectancy)) %>%
arrange(desc(mean_life_expectancy))
life_expectancy_tidy %>%
filter(between(year,1920,2020)) %>%
group_by(country) %>%
summarize(mean_life_expectancy=mean(life_expectancy)) %>%
arrange(mean_life_expectancy)
life_expectancy_tidy %>%
filter(between(year, 1920, 2020)) %>%
pivot_wider(names_from = year,
values_from = life_expectancy) %>%
select(country, `1920`, `2020`) %>%
mutate(delta=`2020`-`1920`) %>%
top_n(5, delta)
life_expectancy_tidy %>%
filter(country == "Kuwait") %>%
filter(between(year, 1920, 2020)) %>%
ggplot(aes(x= year, y= life_expectancy, group = 1))+
geom_line(color="red")+
theme(axis.text.x= element_text(angle =75, hjust =1, size = 4))+
labs(title = "Life Expectancy in Kuwait form 1920 to 2020", x= "Year", y= "Life Expectancy")
population_tidy %>%
filter(between(year, 1920, 2020)) %>%
pivot_wider(names_from = year, values_from = population) %>%
select(country, `1920`, `2020`) %>%
mutate(delta = `2020`-`1920`) %>%
top_n(5,delta)
population %>%
filter(country == "India"| country == "China"| country == "Indonesia" | country == "United States" | country == "Pakistan") %>%
pivot_longer(-country, names_to = "year", values_to = "population") %>%
filter(year >= 1920 & year <=2020) %>%
ggplot(aes(x=year, y= population, group = country, color =country))+
geom_line()+
labs(title = "Top 5 Countries Population Growth Over 100 Years",
x= "Year", y= "POpulation ")+
theme(axis.text.x= element_text(angle= 75, hjust= 1, size= 4))
income_tidy %>%
filter(between(year, 1920, 2020)) %>%
pivot_wider(names_from = year, values_from = income) %>%
mutate(delta = `2020`-`1920`) %>%
top_n(5,delta)
life_expectancy_100 <-life_expectancy_tidy%>%
filter(between(year,1920,2020))
population_100 <-population_tidy %>%
filter(between(year,1920,2020))
income_100 <-income_tidy %>%
filter(between(year,1920,2020))
gapminder_join <- inner_join(life_expectancy_100, population_100, by= c("country", "year"))
gapminder_join <- inner_join(gapminder_join, income_100, by= c("country", "year"))
gapminder_join
gapminder_join %>%
group_by(country) %>%
select(country, life_expectancy, population) %>%
ggplot(aes(x=life_expectancy, y=population, fill=country)) +
geom_density()
gapminder_join %>%
group_by(country) %>%
select(country, life_expectancy, population) %>%
ggplot(aes(x=life_expectancy, y=population)) +
geom_density()
gapminder_join %>%
group_by(country) %>%
select(country, life_expectancy, population) %>%
ggplot(aes(x=life_expectancy, y=population)) +
geom_line()
gapminder_join %>%
group_by(country) %>%
select(country, life_expectancy, population) %>%
ggplot(aes(x=life_expectancy, y=population)) +
geom_density()
gapminder_join %>%
group_by(country) %>%
select(country, life_expectancy, population) %>%
ggplot(aes(x=life_expectancy, y=population, group=country)) +
geom_density()
gapminder_join %>%
group_by(country) %>%
mutate(mean_population = mean(population) %>%
ggplot(aes(x=life_expectancy, y=mean_population, group=country)) +
geom_density()
gapminder_join %>%
group_by(country) %>%
mutate(mean_population = mean(population))
gapminder_join %>%
group_by(country) %>%
summarize(mean_life_expectancy = mean(life_expectancy, na.rm =T),
mean_population =mean(population, na.rm=T),
mean_income = mean(income, na.rm =T))
gapminder_join %>%
group_by(country) %>%
summarize(mean_life_expectancy = mean(life_expectancy, na.rm =T),
mean_population =mean(population, na.rm=T),
mean_income = mean(income, na.rm =T)) %>%
ggplot(aex(x=mean_population, y= mean_income))+
scale_y_log10()+
geom_point()+
geom_smooth(method=lm,se=F)+
theme_linedraw()
gapminder_join %>%
group_by(country) %>%
summarize(mean_life_expectancy = mean(life_expectancy, na.rm =T),
mean_population =mean(population, na.rm=T),
mean_income = mean(income, na.rm =T)) %>%
ggplot(aes(x=mean_population, y= mean_income))+
scale_y_log10()+
geom_point()+
geom_smooth(method=lm,se=F)+
theme_linedraw()
gapminder_join %>%
group_by(country) %>%
summarize(mean_life_expectancy = mean(life_expectancy, na.rm =T),
mean_population =mean(population, na.rm=T),
mean_income = mean(income, na.rm =T)) %>%
ggplot(aes(x=mean_population, y= mean_income))+
geom_point()+
geom_smooth(method=lm,se=F)+
theme_linedraw()
gapminder_join %>%
group_by(country) %>%
summarize(mean_life_expectancy = mean(life_expectancy, na.rm =T),
mean_population =mean(population, na.rm=T),
mean_income = mean(income, na.rm =T)) %>%
ggplot(aes(x=mean_income, y= mean_population))+
geom_point()+
geom_smooth(method=lm,se=F)+
theme_linedraw()
gapminder_join %>%
group_by(country) %>%
summarize(mean_life_expectancy = mean(life_expectancy, na.rm =T),
mean_population =mean(population, na.rm=T),
mean_income = mean(income, na.rm =T)) %>%
ggplot(aes(x=mean_income, y= mean_population))+
scale_y_log10()+
geom_point()+
geom_smooth(method=lm,se=F)+
theme_linedraw()
gapminder_join %>%
group_by(country) %>%
summarize(mean_life_expectancy = mean(life_expectancy, na.rm =T),
mean_population =mean(population, na.rm=T),
mean_income = mean(income, na.rm =T)) %>%
ggplot(aes(x=mean_life_expectancy, y= mean_population))+
scale_y_log10()+
geom_point()+
geom_smooth(method=lm,se=F)+
theme_linedraw()
gapminder_join %>%
group_by(country) %>%
summarize(mean_life_expectancy = mean(life_expectancy, na.rm =T),
mean_population =mean(population, na.rm=T),
mean_income = mean(income, na.rm =T)) %>%
ggplot(aes(x=mean_life_expectancy, y= mean_income))+
scale_y_log10()+
geom_point()+
geom_smooth(method=lm,se=F)+
theme_linedraw()
gapminder_join %>%
group_by(country) %>%
summarize(mean_life_expectancy = mean(life_expectancy, na.rm =T),
mean_population =mean(population, na.rm=T),
mean_income = mean(income, na.rm =T)) %>%
ggplot(aes(x=mean_life_expectancy, y= mean_income))+
scale_y_log10()+
geom_point()+
geom_smooth(method=lm,se=F)+
theme_linedraw()+
labs(title = "Mean Life Expectancy by Mean Income", x= "Mean Life Expectancy", y= "Mean Income")
setwd("C:/Users/merma/OneDrive/Desktop/BIS15W2023_kkong/lab-12")
knitr::opts_chunk$set(echo = TRUE)
library(tidyverse)
library(shiny)
library(shinydashboard)
UC_admit <- readr::read_csv("data/UC_admit.csv")
UC_admit <- UC_admit %>%
filter(Ethnicity!="All")
UC_admit <- readr::read_csv("data/UC_admit.csv")
UC_admit <- readr::read_csv("data/UC_admit.csv")
UC_admit <- readr::read_csv("data/UC_admit.csv")
UC_admit <- readr::read_csv("data/UC_admit.csv")
UC_admit <- readr::read_csv("data/UC_admit.csv")
UC_admit <- readr::read_csv("data/UC_admit.csv")
UC_admit <- readr::read_csv("data/UC_admit.csv")
UC_admit <- readr::read_csv("data/UC_admit.csv")
UC_admit <- readr::read_csv("data/UC_admit.csv")
UC_admit <- readr::read_csv("data/UC_admit.csv")
UC_admit <- readr::read_csv("data/UC_admit.csv")
wolves <- read_csv("data/wolves_data/wolves_dataset.csv")
names(wolves)
wolves %>%
filter(sex!="NA") %>%
ggplot(aes(x=sex, fill=sex))+
geom_bar()+
facet_wrap(~pop)
library(shiny)
ui <-dashboardPage(
dashboardHeader(title ="Sexual Composition of Wolves by Population"),
dashboardSidebar(disable= T),
dashboardBody(
fluidRow(
box(radioButtons("x", "Select Population", choices = c("AK.PEN", "BANJAS", "BC", "DENALI", "ELLES", "GTNP", "INT.AK", "MEXICAN", "MI", "MT", "N.NWT", "ONT", "SE.AK", "SNK", "SS.NWT", "YWP", "YUCH"), selected = "AK.PEN"),
plotOutput("plot", width= "600px", height = "500px")
))))
server <- function(input, output, session) {
session$onSessionEnded(stopApp)
output$plot <- renderPlot({
wolves %>%
filter(pop== input$x) %>%
ggplot(aes(x=sex))+
geom_bar()
})
}
shinyApp(ui, server)
library(shiny)
ui <-dashboardPage(
dashboardHeader(title ="Sexual Composition of Wolves by Population"),
dashboardSidebar(disable= T),
dashboardBody(
fluidRow(
box(radioButtons("x", "Select Population", choices = c("AK.PEN", "BANJAS", "BC", "DENALI", "ELLES", "GTNP", "INT.AK", "MEXICAN", "MI", "MT", "N.NWT", "ONT", "SE.AK", "SNK", "SS.NWT", "YWP", "YUCH"), selected = "AK.PEN"),
plotOutput("plot", width= "600px", height = "500px")
))))
server <- function(input, output, session) {
session$onSessionEnded(stopApp)
output$plot <- renderPlot({
wolves %>%
filter(sex!= "NA") %>%
filter(pop== input$x) %>%
ggplot(aes(x=sex))+
geom_bar()
})
}
shinyApp(ui, server)
library(shiny)
ui <-dashboardPage(
dashboardHeader(title ="Sexual Composition of Wolves by Population"),
dashboardSidebar(disable= T),
dashboardBody(
fluidRow(
box(radioButtons("x", "Select Population", choices = c("AK.PEN", "BANJAS", "BC", "DENALI", "ELLES", "GTNP", "INT.AK", "MEXICAN", "MI", "MT", "N.NWT", "ONT", "SE.AK", "SNK", "SS.NWT", "YWP", "YUCH"), selected = "AK.PEN"),
plotOutput("plot", width= "600px", height = "500px")
))))
server <- function(input, output, session) {
session$onSessionEnded(stopApp)
output$plot <- renderPlot({
wolves %>%
filter(sex!= "NA") %>%
filter(pop== input$x) %>%
ggplot(aes(x=sex, fill= sex))+
geom_bar()
})
}
shinyApp(ui, server)
library(shiny)
ui <-dashboardPage(
dashboardHeader(title ="Sexual Composition of Wolves by Population"),
dashboardSidebar(disable= T),
dashboardBody(
fluidRow(
box(radioButtons("x", "Select Population", choices = c("AK.PEN", "BANJAS", "BC", "DENALI", "ELLES", "GTNP", "INT.AK", "MEXICAN", "MI", "MT", "N.NWT", "ONT", "SE.AK", "SNF", "SS.NWT", "YNP", "YUCH"), selected = "AK.PEN"),
plotOutput("plot", width= "600px", height = "500px")
))))
server <- function(input, output, session) {
session$onSessionEnded(stopApp)
output$plot <- renderPlot({
wolves %>%
filter(sex!= "NA") %>%
filter(pop== input$x) %>%
ggplot(aes(x=sex, fill= sex))+
geom_bar()
})
}
shinyApp(ui, server)
library(shiny)
ui <-dashboardPage(
dashboardHeader(title ="Sexual Composition of Wolves by Population"),
dashboardSidebar(disable= T),
dashboardBody(
fluidRow(
box(radioButtons("x", "Select Population", choices = c("AK.PEN", "BANJAS", "BC", "DENALI", "ELLES", "GTNP", "INT.AK", "MEXICAN", "MI", "MT", "N.NWT", "ONT", "SE.AK", "SNF", "SS.NWT", "YNP", "YUCH"), selected = "AK.PEN"),
plotOutput("plot", width= "600px", height = "500px")
))))
server <- function(input, output, session) {
session$onSessionEnded(stopApp)
output$plot <- renderPlot({
wolves %>%
filter(sex!= "NA") %>%
filter(pop== input$x) %>%
ggplot(aes(x=sex, fill= sex))+
geom_bar(color= "black", alpha = 0.5)
})
}
shinyApp(ui, server)
library(shiny)
ui <-dashboardPage(
dashboardHeader(title ="Sexual Composition of Wolves by Population"),
dashboardSidebar(disable= T),
dashboardBody(
fluidRow(
box(radioButtons("x", "Select Population", choices = c("AK.PEN", "BANJAS", "BC", "DENALI", "ELLES", "GTNP", "INT.AK", "MEXICAN", "MI", "MT", "N.NWT", "ONT", "SE.AK", "SNF", "SS.NWT", "YNP", "YUCH"), selected = "AK.PEN"),
plotOutput("plot", width= "600px", height = "500px")
))))
server <- function(input, output, session) {
session$onSessionEnded(stopApp)
output$plot <- renderPlot({
wolves %>%
filter(sex!= "NA") %>%
filter(pop== input$x) %>%
ggplot(aes(x=sex, fill= sex))+
geom_bar(color= "black", alpha = 0.5)+
theme_light()
})
}
shinyApp(ui, server)
library(shiny)
ui <-dashboardPage(
dashboardHeader(title ="Sexual Composition of Wolves by Population"),
dashboardSidebar(disable= T),
dashboardBody(
fluidRow(
box(title = "Population Options", width = 3,
selectInput("x", "Select Population", choices = c("AK.PEN", "BANJAS", "BC", "DENALI", "ELLES", "GTNP", "INT.AK", "MEXICAN", "MI", "MT", "N.NWT", "ONT", "SE.AK", "SNF", "SS.NWT", "YNP", "YUCH"), selected = "AK.PEN"),
plotOutput("plot", width= "600px", height = "500px")
))))
server <- function(input, output, session) {
session$onSessionEnded(stopApp)
output$plot <- renderPlot({
wolves %>%
filter(sex!= "NA") %>%
filter(pop== input$x) %>%
ggplot(aes(x=sex, fill= sex))+
geom_bar(color= "black", alpha = 0.5)+
theme_light()
})
}
shinyApp(ui, server)
library(shiny)
ui <-dashboardPage(
dashboardHeader(title ="Sexual Composition of Wolves by Population"),
dashboardSidebar(disable= T),
dashboardBody(
fluidRow(
box(title = "Population Options", width = 3,
selectInput("x", "Select Population", choices = c("AK.PEN", "BAN.JAS", "BC", "DENALI", "ELLES", "GTNP", "INT.AK", "MEXICAN", "MI", "MT", "N.NWT", "ONT", "SE.AK", "SNF", "SS.NWT", "YNP", "YUCH"), selected = "AK.PEN"),
plotOutput("plot", width= "600px", height = "500px")
))))
server <- function(input, output, session) {
session$onSessionEnded(stopApp)
output$plot <- renderPlot({
wolves %>%
filter(sex!= "NA") %>%
filter(pop== input$x) %>%
ggplot(aes(x=sex, fill= sex))+
geom_bar(color= "black", alpha = 0.5)+
theme_light()
})
}
shinyApp(ui, server)
UC_admit <- read.delim("C:/Users/merma/Downloads/UC_admit.csv", comment.char="#")
View(UC_admit)
knitr::opts_chunk$set(echo = TRUE)
library(tidyverse)
library(shiny)
library(shinydashboard)
wolves <- read_csv("data/wolves_data/wolves_dataset.csv")
names(wolves)
wolves %>%
filter(sex!="NA") %>%
ggplot(aes(x=sex, fill=sex))+
geom_bar()+
facet_wrap(~pop)
library(shiny)
ui <-dashboardPage(
dashboardHeader(title ="Sexual Composition of Wolves by Population"),
dashboardSidebar(disable= T),
dashboardBody(
fluidRow(
box(title = "Population Options", width = 3,
selectInput("x", "Select Population", choices = c("AK.PEN", "BAN.JAS", "BC", "DENALI", "ELLES", "GTNP", "INT.AK", "MEXICAN", "MI", "MT", "N.NWT", "ONT", "SE.AK", "SNF", "SS.NWT", "YNP", "YUCH"), selected = "AK.PEN"),
plotOutput("plot", width= "600px", height = "500px")
))))
server <- function(input, output, session) {
session$onSessionEnded(stopApp)
output$plot <- renderPlot({
wolves %>%
filter(sex!= "NA") %>%
filter(pop== input$x) %>%
ggplot(aes(x=sex, fill= sex))+
geom_bar(color= "black", alpha = 0.5)+
theme_light()
})
}
shinyApp(ui, server)
library(shiny)
ui <-dashboardPage(
dashboardHeader(title ="Sexual Composition of Wolves by Population"),
dashboardSidebar(disable= T),
dashboardBody(
fluidRow(
box(title = "Population Options", width = 3,
selectInput("x", "Select Population", choices = c("AK.PEN", "BAN.JAS", "BC", "DENALI", "ELLES", "GTNP", "INT.AK", "MEXICAN", "MI", "MT", "N.NWT", "ONT", "SE.AK", "SNF", "SS.NWT", "YNP", "YUCH"), selected = "AK.PEN"),
plotOutput("plot", width= "600px", height = "400px")
))))
server <- function(input, output, session) {
session$onSessionEnded(stopApp)
output$plot <- renderPlot({
wolves %>%
filter(sex!= "NA") %>%
filter(pop== input$x) %>%
ggplot(aes(x=sex, fill= sex))+
geom_bar(color= "black", alpha = 0.5)+
theme_light()
})
}
shinyApp(ui, server)
