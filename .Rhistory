table1=c(patients$height)
mean(table1)
median(table1)
sd(table1)
(sd(table1)/mean(table1))*100
fivenum(table1)
boxplot(height~marriage,patients, horizontal= TRUE, main= "Boxplot of Patient Height by Marriage ",xlab="Height (cm)", ylab= "Marriage Status")
hist(table1, main= "Histogram of Patients' Heights", xlab= "Height (cm)")
patients <- read.csv("C:/Users/merma/Downloads/patients.csv")
table3=(patients$obese)
library(plotrix)
slices=c(1305,1840,1697,73)
lbls=c("normal","obese","overweight","underweight")
pie3D(slices, labels=lbls, main = "Pie Chart of Weight for Patients")
table5= table(patients$gender,patients$marriage)
barplot(table5, main= "Gender versus Marriage", beside = TRUE, legend.text=c("female","male"), col=c("light pink", "light blue"), xlab= "Martial status", ylab= "Number of Patients")
table7=table(patients$marriage, patients$gender)
mosaicplot(table7, main ="Mosaic Plot of Gender vs Martial Status in Patients")
table6= table(patients$obese, patients$gender)
mosaicplot(table6, main = "Mosaic Plot of Obese and Gender")
install.packages(latex)
table5= table(patients$gender,patients$marriage)
barplot(table5, main= "Barplot of Gender versus Marriage", beside = TRUE, legend.text=c("female","male"), col=c("light pink", "light blue"), xlab= "Martial status", ylab= "Number of Patients")
table5= table(patients$gender,patients$marriage)
barplot(table5, main= "Barplot of Gender and Marriage", beside = TRUE, legend.text=c("female","male"), col=c("light pink", "light blue"), xlab= "Martial status", ylab= "Number of Patients")
table7=table(patients$marriage, patients$gender)
mosaicplot(table7, main ="Mosaic Plot of Gender and Martial Status ")
install.packages("tinytex")
tinytex:: install_tinytext()
tinytext::install_tinytex()
install.packages("tinytext")
)
tinytex::install_tinytex()
Radish <- read.csv("C:/Users/merma/Downloads/Radish.csv")
View(Radish)
prob=pnorm(60,54,4.6) - pnorm(51,54,4.6)
prob
all_four_prob=prob^4
prob=pnorm(60,54,4.6) - pnorm(51,54,4.6)
prob
all_four_prob=prob^4
all_four_prob
mean_prob=pnorm(60,54,2.3)-pnorm(51,54,2.3)
mean_prob
hist(Radish$Height, xlab="Radish Height in cm", main= "Histogram of Radish Heights")
qqnorm(Radish$Height, main ="Normal Q-Q PLot for Radish Heights")
qqline(Radish$Height)
hist(Radish$Height, xlab="Radish Height in cm", main= "Histogram of Radish Heights")
qqnorm(Radish$Height, main ="Normal Q-Q Plot for Radish Heights")
qqline(Radish$Height)
n=length(Radish$Height)
mean_rad= mean(Radish$Height)
sd_rad= sd(Radish$Height)/sqrt(n)
t= qt(0.975)
n=length(Radish$Height)
mean_rad= mean(Radish$Height)
sd_rad= sd(Radish$Height)/sqrt(n)
t= qnorm(0.975)
lower_bound = mean_rad + t*sd_rad
upper_bound = mean_rad - t*sd_rad
t= qnorm(0.975) #update before posting
`patients(1)` <- read.csv("C:/Users/merma/Downloads/patients(1).csv")
View(`patients(1)`)
head(patients)
head(patients(1))
patients2 <- read.csv("C:/Users/merma/Downloads/patients2.csv")
View(patients2)
head(patients2)
new_patients = patients2[c(1:16),c(2,9)]
qqnorm(new_patients$totalchol, main = "Q-Q Plot of Total Cholesterol")
qqline(new_patients$totalchol)
results=t.test(new_patients$totalchol~new_patients$sex, alternative = "two.sided", conf.level = 0.95)
results
head(patients2)
new_patients = patients2[,c(2,9)]
qqnorm(new_patients$totalchol, main = "Q-Q Plot of Total Cholesterol")
qqline(new_patients$totalchol)
results=t.test(new_patients$totalchol~new_patients$sex, alternative = "two.sided", conf.level = 0.95)
results
sd(new_patients$totalchol)
females= subset(new_patients, sex == "F")
males = subset(new_patients, sex =="M")
sd(new_patients$totalchol)
females= subset(new_patients, sex == "F")
males = subset(new_patients, sex =="M")
sd(females)
sd(new_patients$totalchol)
females= subset(new_patients, sex == "F")
males = subset(new_patients, sex =="M")
sd(F)
sd(new_patients$totalchol)
females= subset(new_patients, sex == "F")
males = subset(new_patients, sex =="M")
sd(F)
sd(M)
females= as.numeric(subset(new_patients, sex == "F"))
sd(new_patients$totalchol)
females= subset(new_patients, sex == "F")
males = subset(new_patients, sex =="M")
sd(females[,1])
females= subset(new_patients, sex == "F")
males = subset(new_patients, sex =="M")
sd(females[,1])
females= subset(new_patients, sex == "F")
males = subset(new_patients, sex =="M")
sd(females[,1])
sd(males[,1])
view(new_patients)
results
DRP <- read.csv("C:/Users/merma/Downloads/DRP.csv")
View(DRP)
drp_results = t.test(DRP$Response~DRP$Treatment,
alternative = "greater",
conf.level = 0.95)
drp_results = t.test(DRP$Response~DRP$Treatment,
alternative = "greater",
conf.level = 0.95)
drp_results
t.test(DRP$Response~DRP$Treatment,
alternative= "two-sided",
conf.level= 0.95)
t.test(DRP$Response~DRP$Treatment,
alternative= "two.sided",
conf.level= 0.95)
?Norm
??Normal
source("~/.active-rstudio-document", echo=TRUE)
72-69.7=
72-69.7
72-69.7
2.3/(2.8/sqrt(10))
source("~/.active-rstudio-document", echo=TRUE)
Pr(Y>72)= 1-pnorm(2.597585)
Pr(Y>72)=
1-pnorm(2.597585)
Pr(Y>72)=
1-pnorm(2.597585)
1-pnorm(2.597585)
72-69.7
2.3/2.8
1-pnorm(0.8214286)
qnorm(0.80,69.7,2.8/sqrt(10))
qnorm(0.005,lower.tail=F)
qnorm(0.06,lower.tail=F)
((1.554774)^2(2.8)^2)/2
((1.554774)^2(2.8)^2)/2
1.554774)^2*(2.8)^2)/2
((1.554774)^2*(2.8)^2/2
3253676
((1.554774)^2*(2.8)^2)/2
((1.554774)^2*(2.8)^2)/2^2
qnorm(0.80,69.7,2.8/sqrt(10)
hgf
qnorm(0.80,69.7,2.8/sqrt(10))
1-pbinom(1,8,0.30)
dbinom(4,8,0.30)
(4,8,0.70)
dbinom(4,8,0.70)
dbinom(4,8,0.70)*dbinom(4,8,0.30)
?pbinom
pbinom(3,8,0.30)
dbinom(0,8,0.30)+dbinom(1,8,0.30)+dbinom(2,8,0.30)
72-69.7/2.8
72-69
3/2.8
1-pnorm(1.971429)
#Discussion 6
with_par= c(19,25,31,52,49,34,59,47,17,51)
wo_par= c(24,27,36,53,55,34,66,51,20,55)
#elements I need to build C.I by hand
diff= with_pair - wo_par
mean(diff)
sd(diff)/sqrt(10)
# tie it back to our function from before
#regular t-test (independent groups)
t.test(wo_par,with_par, alternative= "two.sided", conf.level =0.95)
#paired t-test (paired data)
t.test(with_pair,wo_par, paired = TRUE, alternative = "two.sided", conf.level = 0.95)
source("~/.active-rstudio-document", echo=TRUE)
source("~/.active-rstudio-document", echo=TRUE)
install.packages("asbio")
library(asbio)
source("~/.active-rstudio-document", echo=TRUE)
reading_results
IQ <- read.csv("C:/Users/merma/Downloads/IQ.csv")
View(IQ)
iq_model=lm(iq~group, data=IQ)
iq_model=lm(iq~group, data=IQ)
iq_anova = anova(iq_model)
iq_model=lm(iq~group, data=IQ)
iq_anova = anova(iq_model)
iq_anova
F_stat=iq_anova[1,4] #20.016
p_value=iq_anova[1,5]
F_stat=iq_anova[1,4] #20.016
p_value=iq_anova[1,5]
iq_anova[1,5]
library(asbio)
bonfCI(IQ$iq, IQ$group, conf.level=0.99) #alpha value was 0.01
library(asbio)
bonfCI(IQ$iq, factor(IQ$group), conf.level=0.99) #alpha value was 0.01
2*pt(4.4969,63.5677,lower.tail=F)
qt(0.0083333333,36,lower.tail=F)
qt(0.008333,36,lower.tail=F)
qt(0.00833,36,lower.tail=F)
qt(0.0125,27,lower.tail=F)
qt(0.0125,36,lower.tail=F)
patients <- read.csv("C:/Users/merma/Downloads/patients.csv")
View(patients)
subdata = patients[,c('totalchol','sex')]
head(subdata)
mu1=subdata[subdata$sex == "M", "totalchol"]
mu2=subdata[subdata$sex == "F", "totalchol"]
t.test(mu1,mu2,alternative = "two.sided", conf.level=0.95)
subdata = patients[,c('totalchol','sex')]
head(subdata)
mu1=subdata[subdata$sex == "F", "totalchol"]
mu2=subdata[subdata$sex == "M", "totalchol"]
t.test(mu1,mu2,alternative = "two.sided", conf.level=0.95)
View(patients)
View(patients)
age_marriage=lm(patients$marriage,data=age)
table(patients$marriage)
table(patients$age,patients$marriage)
grpA=patients$age[c(patients$marriage=="A")]
grpA=patients$age[c(patients$marriage=="A")
sda
library(asbio)
marriageage_results = t.test(patients$age~patients$marriage)
marriageage_results = t.test(patients$age,patients$marriage, alternative ="two.sided", conf.level= 0.95)
t.test(patients$age,patients$marriage)
subdata2= patients[,c("age","marriage")]
head(subdata2)
mu3=subdata2[subdata$age =="Divorced","age"]
mu3=subdata2[subdata2$age =="Divorced","age"]
mu3=subdata2[subdata2$age =="Divorced","age"]
mu3=subdata2[subdata2$age==""]
anova_test(patients$age~patients$marriage)
anova(patients$age~patients$marriage)
?anova
?lm
age_model =lm(patients$age~patients$marriage)
age_anova=anova(age_model)
F_stat=age_anova[1,4]
p_value =age_anova [1,5]
age_model = lm(patients$age~patients$marriage)
age_anova= anova(age_model)
F_stat=age_anova[1,4]
p_value=age_anova[1,5]
age_model = lm(patients$age~patients$marriage)
age_anova= anova(age_model)
F_stat=age_anova[1,4]
F_stat
p_value=age_anova[1,5]
p_value
age_nevermarried = patients[patients$marriage == "nevermarried","age"]
age_married= patients[patients$marriage =="married", "age"]
age_widowed = patients[patients$marriage == "widowed", "age"]
age_other=patients[patients$marriage == "other",age"]"
age_other = patients[patients$marriage == "other", "age"]
age_divorced = patients[patients$marriage =="divorced", "age"]
age_married = patients[patients$marriage == "married","age"]
age_widowed = patients[patients$marriage== "widowed", "age"]
age_other = patients[patients$marriage == "other", "age"]
age_nevermarried = patients[patients$marriage == "nevermarried", "age"]
age_divorced =patients[patients$marriage == "divorced", "age"]
mean(age_divorced);sd(age_divorced)
mean(age_widowed);sd(age_divorced)
mean(age_married);sd(age_married)
mean(age_nevermarried);sd(age_nevermarried)
mean(age_other);sd(age_other)
the.model=lm(patients$age~patients$marriage, data =patients)
ANOVA.table1= anova(the.model)
ANOVA.table1=
the.model=lm(patients$age~patients$marriage, data =patients)
ANOVA.table1= anova(the.model)
ANOVA.table1
F.stat= ANOVA.table1[1,4]
p.value=ANOVA.table1[1,5]
F.stat;p.value
mean(patients$age ~patients$marriage)
library(asbio)
bonfCI(patients$age, as.factor=(patients$marriage), conf.level=0.99)
library(asbio)
bonfCI(patients$age, as.factor=(patients$marriage), conf.level=0.99)
library(asbio)
bonfCI(patients$age,patients$marriage, conf.level=0.99)
library(asbio)
bonfCI(patients$age,factor(patients$marriage), conf.level=0.99)
table(patients$marriage)
table(patients$marriage)
chisq.test(
patients$marriage, p=c(1/5,1/5,/1/5,1/5,1/5),correct= FALSE)
chisq.test(
patients$marriage, p=c(1/5,1/5,1/5,1/5,1/5),correct= FALSE)
chisq.test(patients$marriage, p=c(1/5,1/5,1/5,1/5,1/5),correct= FALSE)
marriage.table =table(patients$marriage)
chisq.test(marriage.table, p=c(1/5,1/5,1/5,1/5,1/5),correct= FALSE)
thetest.marriage = chisq.test(marriage.table, p=c(1/5,1/5,1/5,1/5,1/5),correct= FALSE)
thetest.marriage = chisq.test(marriage.table, p=c(1/5,1/5,1/5,1/5,1/5),correct= FALSE)
thetest.marriage = chisq.test(marriage.table, p=c(1/5,1/5,1/5,1/5,1/5),correct= FALSE)
the.test = chisq.test(marriage.table, p=c(1/5,1/5,1/5,1/5,1/5),correct= FALSE)
marriage.table =table(patients$marriage)
chisq.test(marriage.table, p=c(1/5,1/5,1/5,1/5,1/5),correct= FALSE)
marriage.test = chisq.test(
marriage.table, p=c(1/5,1/5,1/5,1/5,1/5),correct= FALSE)
marriage.test$statistic
marriage.test$p.value
marriage.table
marriage.table-marriage.test$expected
marriage.test$residuals^2
marriage.test = chisq.test(
marriage.table, p=c(1/5,1/5,1/5,1/5,1/5),correct= FALSE)
chisq.test(marriage.table, p=c(1/5,1/5,1/5,1/5,1/5), correct= FALSE)
marriage.test = chisq.test(
marriage.table, p=c(1/5,1/5,1/5,1/5,1/5),correct= FALSE)
chisq.test(
marriage.table, p=c(1/5,1/5,1/5,1/5,1/5),correct= FALSE)
marriage.test$residuals^2
table(patients$obese)
table(patients$marriage)
dept.table= table(patients$obese, patients$marriage)
dept.table= table(patients$obese, patients$marriage)
my.test = chisq.test(dept.table, correct= FALSE)
my.test = chisq.test(dept.table, correct= FALSE)
my.test$statistic
my.test$p.value
my.test$expected
my.test$observed
my.test$observed - my.test$expected
my.test$residuals^2
my.test = chisq.test(dept.table, correct= FALSE)
chisq.test(dept.table, correct =FALSE)
my.test$statistic
my.test$p.value
my.test$expected
my.test$observed
my.test$expected
my.test$observed - my.test$expected
my.test$residuals^2
library("MASS")
head*cats()
head(cats)
plot(cats)
plot(cats, main="Cat graphs")
plot(cats$Bwt,cats$Hwt, xlab='Body Weight',ylab="Heart Weight",
main='Heart vs Body Weight of Cats Scatter Plot')
?cats
plot(cats$Bwt,cats$Hwt, xlab='Body Weight',ylab="Heart Weight",
main='Heart vs Body Weight of Cats Scatter Plot')
Q1.Y = quantile(cats$Hwt,0.25)
Q3.Y = quantile(cats$Hwt,0.75)
lower.Y = Q1.Y - 1.5*(Q3.Y-Q1.Y)
upper.Y = Q3.Y + 1.5*(Q3.Y-Q1.Y)
outliers.Y = which(cats$Hwt > upper.Y | cats$Hwt < lower.Y)
outliers.Y = which(cats$Hwt > upper.Y | cats$Hwt < lower.Y)
Q3.X = quantile(cats$Bwt,0.75)
Q1.X = quantile(cats$Bwt,0.25)
Q3.X = quantile(cats$Bwt,0.75)
lower.X = Q1.X - 1.5*(Q3.X-Q1.X)
upper.X = Q3.X + 1.5*(Q3.X-Q1.X)
outliers.X = which(cats$Bwt > upper.X | cats$Bwt < lower.X)
# Create a new dataset without the outliers:
no.outliers.cats = cats[-c(outliers.X,outliers.Y),]
# Plot new dataset without outliers:
plot(no.outliers.cats$Bwt,no.outliers.cats$Hwt,
xlab='Body Weight',ylab="Heart Weight",
main='Heart vs Body Weight of Cats Scatter Plot Without Outliers')
#(d) Use the function lm (linear model) to find:
# i) The estimated regression line
lin.model = lm(Hwt ~ Bwt, data = no.outliers.cats)
# ii) The standard deviation of the error.
s.e = summary(lin.model)$sigma
# iii) The coefficient variation
r.2 = summary(lin.model)$r.squared
# iii) The coefficient variation
r.2 = summary(lin.model)$r.squared
# You may also display estimates for B_0 and B_1 by:
the.betas = lin.model$coefficients
#(e) Plot the regression line on your plot.
#     Use the plot function followed by abline(the.betas)
plot(no.outliers.cats$Bwt,no.outliers.cats$Hwt,
xlab='Body Weight',ylab="Heart Weight",
main='Heart vs Body Weight of Cats Scatter Plot Without Outliers')
abline(the.betas)
#(f) Construct a 95% C.I. for the slope.
#    Note: the command below gives the C.I.
#    for the slope and intercept.
confint(lin.model,level = 0.95)
ei = lin.model$residuals
plot(y.hat,ei)
#(g) Check the assumption that the errors have constant variance
#    Describe the plot.
y.hat = lin.model$fitted.values
ei = lin.model$residuals
plot(y.hat,ei)
abline(h = 0, col = "purple")
#(h) Check the assumption that the errors are normally distributed
#    Explain what you see.
qqnorm(ei);qqline(ei)
plot(cats$Bwt,cats$Hwt, xlab='Body Weight',ylab="Heart Weight",
main='Heart vs Body Weight of Cats Scatter Plot')
# Plot new dataset without outliers:
plot(no.outliers.cats$Bwt,no.outliers.cats$Hwt,
xlab='Body Weight',ylab="Heart Weight",
main='Heart vs Body Weight of Cats Scatter Plot Without Outliers')
abline(the.betas)
plot(y.hat,ei)
abline(h = 0, col = "purple")
#(h) Check the assumption that the errors are normally distributed
#    Explain what you see.
qqnorm(ei);qqline(ei)
#(g) Check the assumption that the errors have constant variance
#    Describe the plot.
y.hat = lin.model$fitted.values
ei = lin.model$residuals
+ 5 - 3 * 2
+ 8 / 2 ** 2
(5-3)*2
(8/2)*2
((8/2)*2)*2
pi <- 3.14159265359
pi(2)
2(pi)
2*pi
?mean
x <- c(2, 8, 6, 6, 7, 4, 9, 9, 9, 10)
mean(x)
median(x)
setwd("C:/Users/merma/OneDrive/Desktop/BIS15W2023_kkong")
library(tidyverse)
help?
?mammal
??mammal
msleep
sleep <- data.frame(msleep)
dim(sleep)
?na
??na
glimpse(sleep)
name(sleep)
names(sleep)
names(sleep)
??filter
table(sleep$order)
table(sleep$vore)
names(fish) #column names (most useful for us)
fish <-readr::read_csv("data/Gaeta_etal_CLC_data.csv") #insert data/ in quotations (or a specific folder within the working directory). specify the path
ncol(fish) #the number of columns or variables
dim(fish) #total dimensions
names(fish) #column names (most useful for us)
small_bodywt <-filter(sleep,bodywt <= 1)
small_bodywt
large_bodywt <- filter(sleep,bodywt >=200)
large_bodywt
m <-sleep$bodywt
mean(m)
mean(small_bodywt)
mean(small_bodywt, na.rm= T)
small_bodytable <- table(small_bodywt$bodywt)
small_bodytable
small_bodywtnumber <- c(small_bodywt$bodywt)
small_bodywtnumber
small_bodywtnumber <- c(small_bodywt$bodywt)
small_bodywtnumber
mean(small_bodywtnumber)
large_bodywtnumber <- c(large_bodywt$bodywt)
large_bodywtnumber
mean(large_bodywtnumber)
View(sleep)
large_sleeptime <-c(large_bodywt$sleep_total)
large_sleeptime
small_sleeptime <-c(small_bodywt$sleep_total)
small_sleeptime
mean(small_sleeptime)
large_sleeptime <-c(large_bodywt$sleep_total)
large_sleeptime
mean(large_sleeptime)
str(mammals)
mammals <- readr::read_csv("data/mammal_lifehistories_v2.csv")
str(mammals)
glimpse(mammals) #makes most sense
dim(mammals)
View(fish)
summary(sleep)
summary(sleep)
sleepiest_animal <-filter(sleep, sleep_rem =0.100)
summary(sleep)
sleepiest_animal <-filter(sleep, sleep_rem ==0.100)
summary(sleep)
sleepiest_animal <-filter(sleep, sleep_rem ==0.100)
sleepiest_animal
summary(sleep)
summary(sleep)
sleepy_animal_check <- filter(sleep, sleep_total ==1.90)
summary(sleep)
sleepy_animal_check <- filter(sleep, sleep_total ==1.90)
sleepy_animal_check
summary(sleep)
sleepiest_animal <-filter(sleep, sleep_rem ==0.100, na.rm= T)
summary(sleep)
sleepiest_animal <-filter(sleep, sleep_rem ==0.100, na.rm== T)
summary(sleep)
sleepy_animal_check <- filter.dataframe(sleep, sleep_total ==1.90)
summary(sleep)
sleepy_animal_check <- filter(sleep, sleep_total ==1.90)
sleepy_animal_check
summary(sleep)
sleepiest_animal <-filter(sleep, sleep_rem ==0.100)
sleepiest_animal
glimpse(sleep)
summary(sleep)
