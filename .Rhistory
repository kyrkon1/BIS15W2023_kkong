geom_line()+
labs(title= "Life Expectancy between 1952 and 2007 across continents",
x= "year", y= "Life Expectancy")
gapminder %>%
select(continent, lifeExp, year) %>%
ggplot(aes(x=year,y=lifeExp, fill = continent))+
geom_line()+
labs(title= "Life Expectancy between 1952 and 2007 across continents",
x= "year", y= "Life Expectancy")
gapminder %>%
filter(between(year, 1952, 2007)) %>%
select(continent, lifeExp, year) %>%
ggplot(aes(x=year,y=lifeExp, fill = continent))+
geom_line()+
labs(title= "Life Expectancy between 1952 and 2007 across continents",
x= "year", y= "Life Expectancy")
gapminder %>%
ggplot(aes(x=continent, y= gdpPercap, fill= range_pop))+
geom_boxplot(alpha=0.5)+
facet_grid(.~range_pop)+
scale_y_log10()+
theme(axis.text.x = element_text(angle=60))+
labs(title= "Per Capita GDP by Continent and Population Range",
x= "Continent", y= "Per Capita GDP")
gapminder %>%
filter(year == 1952| year == 2007) %>%
group_by(lifeExp) %>%
ggplot(aes(x=year, y= lifeExp)) +
geom_col(fill = "peachpuff", alpha =0.5)+
theme_bw()+
labs(title = "Life Expectancy between 1952 and 2007", y= "Life Expectancy")
gapminder %>%
filter(year == 1952| year == 2007) %>%
group_by(lifeExp)
gapminder %>%
filter(year == 1952| year == 2007) %>%
group_by(lifeExp) %>%
summarize(min_lifeExp= min(lifeExp),
mean_lifeExp = mean(lifeExp),
max_lifeExp = max(lifeEXp))
gapminder %>%
filter(year == 1952| year == 2007) %>%
group_by(lifeExp) %>%
mutate(mean_globallifeexp = mean(lifeExp))
gapminder %>%
filter(year == 1952| year == 2007) %>%
ggplot(aes(x=year, y= lifeExp))+
geom_line()
gapminder %>%
filter(year == 1952| year == 2007) %>%
ggplot(aes(x=year, y= lifeExp))+
geom_col()
gapminder %>%
filter(year == 1952| year == 2007) %>%
ggplot(aes(x=year, y= lifeExp, group = country))+
geom_line(alpha=0.5)
gapminder %>%
filter(year == 1952| year == 2007) %>%
ggplot(aes(x=year, y= lifeExp, group = country, color= continent))+
geom_line(alpha=0.5)
gapminder %>%
filter(year == 1952| year == 2007) %>%
ggplot(aes(x=year, y= lifeExp, group = country, color= continent))+
geom_col()
gapminder %>%
filter(year == 1952| year == 2007) %>%
ggplot(aes(x=year, y= lifeExp, group = country, color= continent))+
geom_col(position = "dodge")
gapminder %>%
filter(year== 1952| year == 2007) %>%
select(year, lifeExp) %>%
ggplot(gapminder, aes(x = year, y = lifeExp, group = country, color = continent)) +
geom_line(alpha = 0.5)
gapminder %>%
filter(year== 1952| year == 2007) %>%
select(year, lifeExp) %>%
ggplot( aes(x = year, y = lifeExp, group = country, color = continent)) +
geom_line(alpha = 0.5)
gapminder %>%
filter(year== 1952| year == 2007) %>%
ggplot(aes(x = year, y = lifeExp, group = country, color = continent)) +
geom_line(alpha = 0.5)
gapminder %>%
ggplot(aes(x=year, y= lifeExp, group = country, color= continent))+
geom_line(alpha=0.5)
gapminder %>%
ggplot(aes(x=year, y= lifeExp))+
geom_line(alpha=0.5)
gapminder %>%
ggplot(aes(x=year, y= lifeExp, group = continent))+
geom_line(alpha=0.5)
gapminder %>%
ggplot(aes(x=year, y= lifeExp, group = country, color = continent))+
geom_line(alpha=0.5)
gapminder %>%
ggplot(aes(x=year, y= lifeExp, group= country, color= continent))+
geom_line()
gapminder %>%
select(year, lifeExp)
gapminder %>%
ggplot(aes(x=year, y= lifeExp)) +
geom_col()
gapminder %>%
filter(year ==1952| year= 2007) %>%
gapminder %>%
filter(year ==1952| year== 2007) %>%
ggplot(aes(x=year, y= lifeExp)) +
geom_col()
gapminder %>%
filter(year ==1952| year== 2007) %>%
ggplot(aes(x=year, y= lifeExp)) +
geom_col(color=country)
gapminder %>%
filter(year ==1952| year== 2007) %>%
ggplot(aes(x=year, y= lifeExp, color = country_colors)) +
geom_col()
gapminder %>%
filter(year ==1952| year== 2007) %>%
ggplot(aes(x=year, y= lifeExp)) +
geom_col()
gapminder %>%
filter(year ==1952| year== 2007) %>%
ggplot(aes(x=year, y= lifeExp)) +
geom_col()+
labs(title = "Life Expectancy from 1952 and 2007",
x= "Year", y= "Life Expectancy")
gapminder %>%
ggplot(aes(x=year, y= lifeExp)) +
geom_col()+
labs(title = "Life Expectancy from 1952 and 2007",
x= "Year", y= "Life Expectancy")
gapminder %>%
filter(year== 1952| year == 2007) %>%
ggplot(aes(x = year, y = lifeExp)) +
geom_col(alpha = 0.5)+
labs(title "Life Expectancy for 1952 and 2007")
gapminder %>%
filter(year== 1952| year == 2007) %>%
ggplot(aes(x = year, y = lifeExp)) +
geom_col(alpha = 0.5)+
labs(title ="Life Expectancy for 1952 and 2007")
gapminder %>%
filter(year== 1952| year == 2007) %>%
ggplot(aes(x = year, y = lifeExp)) +
geom_col(alpha = 0.5)+
labs(title ="Life Expectancy for 1952 and 2007", x= "Year", y= "Life Expectancy")
knitr::opts_chunk$set(echo = TRUE)
library(tidyverse)
library(janitor)
options(scipen=999) #disables scientific notation when printing
library(here)
population <- read_csv(here("practice_midterm2", "data", "population_total.csv"))
income <- read_csv(here("practice_midterm2", "data", "income_per_person_gdppercapita_ppp_inflation_adjusted.csv"))
life_expectancy <- read_csv(here("practice_midterm2" , "data", "life_expectancy_years.csv"))
income_tidy <-income %>%
pivot_longer(-country,
names_to = "year",
values_to = "income") %>%
mutate(country= as_factor(country))
life_expectancy_tidy <-life_expectancy %>%
pivot_longer(-country,
names_to = "year",
values_to = "life_expectancy") %>%
mutate(country= as_factor(country))
population_tidy <-population %>%
pivot_longer(-country,
names_to = "year",
values_to = "population") %>%
mutate(country= as_factor(country))
income_tidy %>%
summarize(n_country= n_distinct(country))
income_tidy %>%
count(country) %>%
select(country)
population_tidy %>%
summarize(n_country = n_distinct(country))
population_tidy %>%
count(country) %>%
select(country)
life_expectancy_tidy %>%
summarize(n_country= n_distinct(country))
life_expectancy_tidy %>%
count(country) %>%
select(country)
life_expectancy_tidy %>%
filter(between(year,1920,2020)) %>%
group_by(country) %>%
summarize(mean_life_expectancy= mean(life_expectancy)) %>%
arrange(desc(mean_life_expectancy))
life_expectancy_tidy %>%
filter(between(year,1920,2020)) %>%
group_by(country) %>%
summarize(mean_life_expectancy=mean(life_expectancy)) %>%
arrange(mean_life_expectancy)
life_expectancy_tidy %>%
filter(between(year, 1920, 2020)) %>%
pivot_wider(names_from = year,
values_from = life_expectancy) %>%
select(country, `1920`, `2020`) %>%
mutate(delta=`2020`-`1920`) %>%
top_n(5, delta)
life_expectancy_tidy %>%
filter(country == "Kuwait") %>%
filter(between(year, 1920, 2020)) %>%
ggplot(aes(x= year, y= life_expectancy, group = 1))+
geom_line(color="red")+
theme(axis.text.x= element_text(angle =75, hjust =1, size = 4))+
labs(title = "Life Expectancy in Kuwait form 1920 to 2020", x= "Year", y= "Life Expectancy")
population_tidy %>%
filter(between(year, 1920, 2020)) %>%
pivot_wider(names_from = year, values_from = population) %>%
select(country, `1920`, `2020`) %>%
mutate(delta = `2020`-`1920`) %>%
top_n(5,delta)
population %>%
filter(country == "India"| country == "China"| country == "Indonesia" | country == "United States" | country == "Pakistan") %>%
pivot_longer(-country, names_to = "year", values_to = "population") %>%
filter(year >= 1920 & year <=2020) %>%
ggplot(aes(x=year, y= population, group = country, color =country))+
geom_line()+
labs(title = "Top 5 Countries Population Growth Over 100 Years",
x= "Year", y= "POpulation ")+
theme(axis.text.x= element_text(angle= 75, hjust= 1, size= 4))
income_tidy %>%
filter(between(year, 1920, 2020)) %>%
pivot_wider(names_from = year, values_from = income) %>%
mutate(delta = `2020`-`1920`) %>%
top_n(5,delta)
life_expectancy_100 <-life_expectancy_tidy%>%
filter(between(year,1920,2020))
population_100 <-population_tidy %>%
filter(between(year,1920,2020))
income_100 <-income_tidy %>%
filter(between(year,1920,2020))
gapminder_join <- inner_join(life_expectancy_100, population_100, by= c("country", "year"))
gapminder_join <- inner_join(gapminder_join, income_100, by= c("country", "year"))
gapminder_join
gapminder_join %>%
group_by(country) %>%
select(country, life_expectancy, population) %>%
ggplot(aes(x=life_expectancy, y=population, fill=country)) +
geom_density()
gapminder_join %>%
group_by(country) %>%
select(country, life_expectancy, population) %>%
ggplot(aes(x=life_expectancy, y=population)) +
geom_density()
gapminder_join %>%
group_by(country) %>%
select(country, life_expectancy, population) %>%
ggplot(aes(x=life_expectancy, y=population)) +
geom_line()
gapminder_join %>%
group_by(country) %>%
select(country, life_expectancy, population) %>%
ggplot(aes(x=life_expectancy, y=population)) +
geom_density()
gapminder_join %>%
group_by(country) %>%
select(country, life_expectancy, population) %>%
ggplot(aes(x=life_expectancy, y=population, group=country)) +
geom_density()
gapminder_join %>%
group_by(country) %>%
mutate(mean_population = mean(population) %>%
ggplot(aes(x=life_expectancy, y=mean_population, group=country)) +
geom_density()
gapminder_join %>%
group_by(country) %>%
mutate(mean_population = mean(population))
gapminder_join %>%
group_by(country) %>%
summarize(mean_life_expectancy = mean(life_expectancy, na.rm =T),
mean_population =mean(population, na.rm=T),
mean_income = mean(income, na.rm =T))
gapminder_join %>%
group_by(country) %>%
summarize(mean_life_expectancy = mean(life_expectancy, na.rm =T),
mean_population =mean(population, na.rm=T),
mean_income = mean(income, na.rm =T)) %>%
ggplot(aex(x=mean_population, y= mean_income))+
scale_y_log10()+
geom_point()+
geom_smooth(method=lm,se=F)+
theme_linedraw()
gapminder_join %>%
group_by(country) %>%
summarize(mean_life_expectancy = mean(life_expectancy, na.rm =T),
mean_population =mean(population, na.rm=T),
mean_income = mean(income, na.rm =T)) %>%
ggplot(aes(x=mean_population, y= mean_income))+
scale_y_log10()+
geom_point()+
geom_smooth(method=lm,se=F)+
theme_linedraw()
gapminder_join %>%
group_by(country) %>%
summarize(mean_life_expectancy = mean(life_expectancy, na.rm =T),
mean_population =mean(population, na.rm=T),
mean_income = mean(income, na.rm =T)) %>%
ggplot(aes(x=mean_population, y= mean_income))+
geom_point()+
geom_smooth(method=lm,se=F)+
theme_linedraw()
gapminder_join %>%
group_by(country) %>%
summarize(mean_life_expectancy = mean(life_expectancy, na.rm =T),
mean_population =mean(population, na.rm=T),
mean_income = mean(income, na.rm =T)) %>%
ggplot(aes(x=mean_income, y= mean_population))+
geom_point()+
geom_smooth(method=lm,se=F)+
theme_linedraw()
gapminder_join %>%
group_by(country) %>%
summarize(mean_life_expectancy = mean(life_expectancy, na.rm =T),
mean_population =mean(population, na.rm=T),
mean_income = mean(income, na.rm =T)) %>%
ggplot(aes(x=mean_income, y= mean_population))+
scale_y_log10()+
geom_point()+
geom_smooth(method=lm,se=F)+
theme_linedraw()
gapminder_join %>%
group_by(country) %>%
summarize(mean_life_expectancy = mean(life_expectancy, na.rm =T),
mean_population =mean(population, na.rm=T),
mean_income = mean(income, na.rm =T)) %>%
ggplot(aes(x=mean_life_expectancy, y= mean_population))+
scale_y_log10()+
geom_point()+
geom_smooth(method=lm,se=F)+
theme_linedraw()
gapminder_join %>%
group_by(country) %>%
summarize(mean_life_expectancy = mean(life_expectancy, na.rm =T),
mean_population =mean(population, na.rm=T),
mean_income = mean(income, na.rm =T)) %>%
ggplot(aes(x=mean_life_expectancy, y= mean_income))+
scale_y_log10()+
geom_point()+
geom_smooth(method=lm,se=F)+
theme_linedraw()
gapminder_join %>%
group_by(country) %>%
summarize(mean_life_expectancy = mean(life_expectancy, na.rm =T),
mean_population =mean(population, na.rm=T),
mean_income = mean(income, na.rm =T)) %>%
ggplot(aes(x=mean_life_expectancy, y= mean_income))+
scale_y_log10()+
geom_point()+
geom_smooth(method=lm,se=F)+
theme_linedraw()+
labs(title = "Mean Life Expectancy by Mean Income", x= "Mean Life Expectancy", y= "Mean Income")
knitr::opts_chunk$set(echo = TRUE)
UC_admit <- readr::read_csv("data/UC_admit.csv")
knitr::opts_chunk$set(echo = TRUE)
library(tidyverse)
library(shiny)
library(shinydashboard)
UC_admit <- readr::read_csv("data/UC_admit.csv")
glimpse(UC_admit)
UC_admit <- UC_admit %>%
filter(Ethnicity!="All")
ui <- dashboardPage(
dashboardHeader(title = "UC Campus Admissions by Ethnicity 2010-2019"),
dashboardSidebar(),
dashboardBody(
fluidRow(
box(title = "Plot Options", width = 3,
radioButtons("x", "Select Year", choices = c("2010", "2011", "2012", "2013", "2014", "2015", "2016", "2017", "2018", "2019"),
selected = "2010"),
selectInput("y", "Select Campus", choices = c("Davis", "Irvine", "Berkeley", "Irvine", "Los_Angeles", "Merced", "Riverside", "San_Diego", "Santa_Barbara", "Santa_Cruz"),
selected = "Davis"),
selectInput("z", "Select Admit Category", choices = c("Applicants", "Admits", "Enrollees"),
selected = "Applicants")
), # close the first box
box(title = "UC Admissions", width = 7,
plotOutput("plot", width = "600px", height = "500px")
) # close the second box
) # close the row
) # close the dashboard body
) # close the ui
server <- function(input, output, session) {
output$plot <- renderPlot({
UC_admit %>%
filter(Academic_Yr==input$x & Campus==input$y & Category==input$z) %>%
ggplot(aes(x=reorder(Ethnicity, FilteredCountFR), y=FilteredCountFR)) +
geom_col(color="black", fill="steelblue", alpha=0.75) +
theme_light(base_size = 18) +
theme(axis.text.x = element_text(angle = 60, hjust = 1))+
labs(x = "Ethnicity", y = "Number")
})
# stop the app when we close it
session$onSessionEnded(stopApp)
}
shinyApp(ui, server)
UC_admit$Academic_Yr <- as.factor(UC_admit$Academic_Yr)
ui <- dashboardPage(
dashboardHeader(title = "UC Campus Admissions by Year and Ethnicity"),
dashboardSidebar(),
dashboardBody(
fluidRow(
box(title = "Plot Options", width = 3,
selectInput("x", "Select Campus", choices = c("Davis", "Irvine", "Berkeley", "Irvine", "Los_Angeles", "Merced", "Riverside", "San_Diego", "Santa_Barbara", "Santa_Cruz"),
selected = "Davis"),
selectInput("z", "Select Admit Category", choices = c("Applicants", "Admits", "Enrollees"),
selected = "Applicants"),
radioButtons("y", "Select Ethnicity", choices = c("International", "Unknown", "White", "Asian", "Chicano/Latino", "American Indian", "African American"),
selected = "International")
), # close the first box
box(title = "UC Admissions", width = 7,
plotOutput("plot", width = "600px", height = "500px")
) # close the second box
) # close the row
) # close the dashboard body
) # close the ui
server <- function(input, output, session) {
output$plot <- renderPlot({
UC_admit %>%
filter(Campus==input$x & Ethnicity==input$y & Category==input$z) %>%
ggplot(aes(x=Academic_Yr, y=FilteredCountFR)) +
geom_col(color="black", fill="steelblue", alpha=0.75) +
theme_light(base_size = 18) +
theme(axis.text.x = element_text(angle = 60, hjust = 1))+
labs(x = "Year", y = "Enrollment")
})
# stop the app when we close it
session$onSessionEnded(stopApp)
}
shinyApp(ui, server)
gabon <- readr::read_csv("data/IvindoData_DryadVersion.csv")
names(gabon)
glimpse(gabon)
ui <- dashboardPage(
dashboardHeader(title = "Relative Abundance"),
dashboardSidebar(disable = T),
dashboardBody(
fluidRow(
box(title = "Plot Options", width = 3,
selectInput("x", "Select RA Taxon", choices = c("RA_Apes", "RA_Birds", "RA_Elephant", "RA_Monkeys", "RA_Rodent", "RA_Ungulate"),
selected = "RA_Apes"),
hr(),
helpText("Reference: Koerner SE, Poulsen JR, Blanchard EJ, Okouyi J, Clark CJ. Vertebrate community composition and diversity declines along a defaunation gradient radiating from rural villages in Gabon. Journal of Applied Ecology. 2016.")
), # close the first box
box(title = "Relative Abundance %", width = 6,
plotOutput("plot", width = "600px", height = "500px")
) # close the second box
) # close the row
) # close the dashboard body
) # close the ui
server <- function(input, output, session) {
output$plot <- renderPlot({
gabon %>%
ggplot(aes_string(x = "Distance", y = input$x)) +
geom_point(size=4)+
geom_smooth(method=lm, se=T)+
scale_x_continuous(breaks=seq(0, 30, by = 5))+ theme_light(base_size = 18)
})
# stop the app when we close it
session$onSessionEnded(stopApp)
}
shinyApp(ui, server)
knitr::opts_chunk$set(echo = TRUE)
UC_admit <- UC_admit %>%
filter(Ethnicity!="All")
knitr::opts_chunk$set(echo = TRUE)
library(tidyverse)
library(shiny)
library(shinydashboard)
UC_admit <- readr::read_csv("data/UC_admit.csv")
knitr::opts_chunk$set(echo = TRUE)
library(tidyverse)
library(janitor)
library(here)
library(ggmap)
grizzly <- read.csv("data/bear-sightings.csv")
wolves <-read.csv("data/wolves_data/wolves_dataset.csv")
glimpse(grizzly)
grizzly %>%
select(longitude, latitude) %>%
summary()
longitude <- c(-166.2,-131.3)
latitude <-c(55.02,70.37)
grizzlybbox <-make_bbox(longitude,latitude, f=0.05)
map1<-get_map(grizzlybbox, maptype = "terrain", source = "stamen")
ggmap(map1)
ggmap(map1)+
geom_point(data= grizzly, aes(longitude, latitude), alpha=0.75)+
labs(title= "Grizzly Bears in Alaska", x= "Longitude", y = "Latitude")
glimpse(wolves)
tabyl(wolves$pop) #not alaska and canada
lower48 <-wolves %>%
filter(pop != "AK.PEN" & pop != "INT.AK" & pop != "SE.AK" & pop != "ONT" & pop != "BC" & pop!= "YUCH" & pop != "DENALI" & pop != "SS.NWT" & pop!= "ELLES" & pop!= "BAN.JAS" & pop!= "N.NWT") # removed anything not related to the lower 48 aka no alaska and canadian
tabyl(lower48$pop)
names(lower48)
lower48 %>%
select(long,lat) %>%
summary()
longitude2 <- c(-110.99,-86.82)
latitude2<-c(33.89,47.75)
wolvesbbox<-make_bbox(longitude2, latitude2, f= 0.05)
map2 <-get_map(wolvesbbox, maptype = "terrain-lines", source = "stamen")
ggmap(map2)
ggmap(map2) +
geom_point(data=lower48, aes(long, lat), alpha = 0.05)+
labs(title= "Wolves in the Lower 48 States", x= "Longitude", y= "Latitude")
names(lower48)
ggmap(map2) +
geom_point(data=lower48, aes(long, lat, color= pop))+
labs(title= "Wolves in the Lower 48 States", x= "Longitude", y= "Latitude")
setwd("C:/Users/merma/OneDrive/Desktop/BIS15W2023_kkong")
